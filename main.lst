   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  11               	get:
  12               	.LVL0:
  13               	.LFB7:
  14               		.file 1 "noise.c"
   1:noise.c       **** #include <inttypes.h>
   2:noise.c       **** 
   3:noise.c       **** static const int p[] =
   4:noise.c       **** {
   5:noise.c       **** 	151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,
   6:noise.c       **** 	23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,
   7:noise.c       **** 	174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,
   8:noise.c       **** 	133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,
   9:noise.c       **** 	89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,
  10:noise.c       **** 	202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,
  11:noise.c       **** 	248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,
  12:noise.c       **** 	178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,
  13:noise.c       **** 	14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,
  14:noise.c       **** 	93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180
  15:noise.c       **** };
  16:noise.c       **** 
  17:noise.c       **** static int get(int i);
  18:noise.c       **** static double fade(double t);
  19:noise.c       **** static double lerp(double t, double a, double b);
  20:noise.c       **** static double grad(int hash, double x, double y, double z);
  21:noise.c       **** 
  22:noise.c       **** static double Noise(double x, double y, double z)
  23:noise.c       **** {
  24:noise.c       **** 	int floorX, floorY, floorZ, X, Y, Z, A, AA, AB, B, BA, BB;
  25:noise.c       **** 	double u, v, w;
  26:noise.c       **** 	floorX = (int)x;
  27:noise.c       **** 	floorY = (int)y;
  28:noise.c       **** 	floorZ = (int)z;
  29:noise.c       **** 	X = floorX & 0xFF;
  30:noise.c       **** 	Y = floorY & 0xFF;
  31:noise.c       **** 	Z = floorZ & 0xFF;
  32:noise.c       **** 	x -= floorX;
  33:noise.c       **** 	y -= floorY;
  34:noise.c       **** 	z -= floorZ;
  35:noise.c       **** 	u = fade(x);
  36:noise.c       **** 	v = fade(y);
  37:noise.c       **** 	w = fade(z);
  38:noise.c       **** 	A = get(X) + Y;
  39:noise.c       **** 	AA = get(A) + Z;
  40:noise.c       **** 	AB = get(A + 1) + Z;
  41:noise.c       **** 	B = get(X + 1) + Y;
  42:noise.c       **** 	BA = get(B) + Z;
  43:noise.c       **** 	BB = get(B + 1) + Z;
  44:noise.c       **** 	return lerp(w, lerp(v, lerp(u,
  45:noise.c       **** 		grad(get(AA), x, y, z),
  46:noise.c       **** 		grad(get(BA), x - 1, y, z)), lerp(u,
  47:noise.c       **** 		grad(get(AB), x, y - 1, z),
  48:noise.c       **** 		grad(get(BB), x - 1, y - 1, z))), lerp(v, lerp(u,
  49:noise.c       **** 		grad(get(AA + 1), x, y, z - 1),
  50:noise.c       **** 		grad(get(BA + 1), x - 1, y, z - 1)), lerp(u,
  51:noise.c       **** 		grad(get(AB + 1), x, y - 1, z - 1),
  52:noise.c       **** 		grad(get(BB + 1), x - 1, y - 1, z - 1))));
  53:noise.c       **** }
  54:noise.c       **** 
  55:noise.c       **** static int get(int i)
  56:noise.c       **** {
  15               		.loc 1 56 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               		.loc 1 56 1 is_stmt 0 view .LVU1
  22 0000 9C01      		movw r18,r24
  57:noise.c       **** 	return i < 256 ? p[i] : p[i - 256];
  23               		.loc 1 57 2 is_stmt 1 view .LVU2
  24               		.loc 1 57 24 is_stmt 0 view .LVU3
  25 0002 8F3F      		cpi r24,-1
  26 0004 9105      		cpc r25,__zero_reg__
  27 0006 01F0      		breq .+2
  28 0008 04F4      		brge .L2
  29               		.loc 1 57 24 discriminator 1 view .LVU4
  30 000a 220F      		lsl r18
  31 000c 331F      		rol r19
  32 000e F901      		movw r30,r18
  33 0010 E050      		subi r30,lo8(-(p))
  34 0012 F040      		sbci r31,hi8(-(p))
  35               	.LVL1:
  36               	.L4:
  37               		.loc 1 57 24 discriminator 2 view .LVU5
  38 0014 8081      		ld r24,Z
  39 0016 9181      		ldd r25,Z+1
  40               	/* epilogue start */
  58:noise.c       **** }
  41               		.loc 1 58 1 discriminator 2 view .LVU6
  42 0018 0895      		ret
  43               	.LVL2:
  44               	.L2:
  57:noise.c       **** 	return i < 256 ? p[i] : p[i - 256];
  45               		.loc 1 57 24 discriminator 2 view .LVU7
  46 001a 220F      		lsl r18
  47 001c 331F      		rol r19
  48               	.LVL3:
  57:noise.c       **** 	return i < 256 ? p[i] : p[i - 256];
  49               		.loc 1 57 24 discriminator 2 view .LVU8
  50 001e F901      		movw r30,r18
  51 0020 E050      		subi r30,lo8(-(p-512))
  52 0022 F040      		sbci r31,hi8(-(p-512))
  53 0024 00C0      		rjmp .L4
  54               		.cfi_endproc
  55               	.LFE7:
  57               	.global	__addsf3
  59               	grad:
  60               	.LVL4:
  61               	.LFB10:
  59:noise.c       **** 
  60:noise.c       **** static double fade(double t)
  61:noise.c       **** {
  62:noise.c       **** 	return t * t * t * (t * (t * 6 - 15) + 10);
  63:noise.c       **** }
  64:noise.c       **** 
  65:noise.c       **** static double lerp(double t, double a, double b)
  66:noise.c       **** {
  67:noise.c       **** 	return a + t * (b - a);
  68:noise.c       **** }
  69:noise.c       **** 
  70:noise.c       **** static double grad(int hash, double x, double y, double z)
  71:noise.c       **** {
  62               		.loc 1 71 1 is_stmt 1 view -0
  63               		.cfi_startproc
  64               		.loc 1 71 1 is_stmt 0 view .LVU10
  65 0026 AF92      		push r10
  66               	.LCFI0:
  67               		.cfi_def_cfa_offset 3
  68               		.cfi_offset 10, -2
  69 0028 BF92      		push r11
  70               	.LCFI1:
  71               		.cfi_def_cfa_offset 4
  72               		.cfi_offset 11, -3
  73 002a CF92      		push r12
  74               	.LCFI2:
  75               		.cfi_def_cfa_offset 5
  76               		.cfi_offset 12, -4
  77 002c DF92      		push r13
  78               	.LCFI3:
  79               		.cfi_def_cfa_offset 6
  80               		.cfi_offset 13, -5
  81 002e EF92      		push r14
  82               	.LCFI4:
  83               		.cfi_def_cfa_offset 7
  84               		.cfi_offset 14, -6
  85 0030 FF92      		push r15
  86               	.LCFI5:
  87               		.cfi_def_cfa_offset 8
  88               		.cfi_offset 15, -7
  89 0032 0F93      		push r16
  90               	.LCFI6:
  91               		.cfi_def_cfa_offset 9
  92               		.cfi_offset 16, -8
  93 0034 1F93      		push r17
  94               	.LCFI7:
  95               		.cfi_def_cfa_offset 10
  96               		.cfi_offset 17, -9
  97 0036 CF93      		push r28
  98               	.LCFI8:
  99               		.cfi_def_cfa_offset 11
 100               		.cfi_offset 28, -10
 101 0038 DF93      		push r29
 102               	.LCFI9:
 103               		.cfi_def_cfa_offset 12
 104               		.cfi_offset 29, -11
 105 003a 00D0      		rcall .
 106 003c 00D0      		rcall .
 107 003e 0F92      		push __tmp_reg__
 108               	.LCFI10:
 109               		.cfi_def_cfa_offset 17
 110 0040 CDB7      		in r28,__SP_L__
 111 0042 DEB7      		in r29,__SP_H__
 112               	.LCFI11:
 113               		.cfi_def_cfa_register 28
 114               	/* prologue: function */
 115               	/* frame size = 5 */
 116               	/* stack size = 15 */
 117               	.L__stack_usage = 15
 118 0044 FC01      		movw r30,r24
  72:noise.c       **** 	int h;
 119               		.loc 1 72 2 is_stmt 1 view .LVU11
  73:noise.c       **** 	double u, v;
 120               		.loc 1 73 2 view .LVU12
  74:noise.c       **** 	h = hash & 15;
 121               		.loc 1 74 2 view .LVU13
  75:noise.c       **** 	u = h < 8 ? x : y;
 122               		.loc 1 75 2 view .LVU14
 123               		.loc 1 75 16 is_stmt 0 view .LVU15
 124 0046 83FF      		sbrs r24,3
 125 0048 00C0      		rjmp .L10
 126 004a 2D83      		std Y+5,r18
 127 004c C801      		movw r24,r16
 128               	.LVL5:
 129               		.loc 1 75 16 view .LVU16
 130 004e D901      		movw r26,r18
 131 0050 8983      		std Y+1,r24
 132 0052 9A83      		std Y+2,r25
 133 0054 AB83      		std Y+3,r26
 134 0056 BC83      		std Y+4,r27
 135               	.L6:
 136               	.LVL6:
  76:noise.c       **** 	v = h < 4 ? y : h == 12 || h == 14 ? x : z;
 137               		.loc 1 76 2 is_stmt 1 discriminator 4 view .LVU17
 138               		.loc 1 76 16 is_stmt 0 discriminator 4 view .LVU18
 139 0058 CF01      		movw r24,r30
 140 005a 8C70      		andi r24,12
 141 005c 9927      		clr r25
 142 005e 892B      		or r24,r25
 143 0060 01F4      		brne .+2
 144 0062 00C0      		rjmp .L11
  74:noise.c       **** 	h = hash & 15;
 145               		.loc 1 74 4 discriminator 1 view .LVU19
 146 0064 CF01      		movw r24,r30
 147 0066 8F70      		andi r24,15
 148 0068 9927      		clr r25
 149               		.loc 1 76 41 discriminator 1 view .LVU20
 150 006a 8C30      		cpi r24,12
 151 006c 9105      		cpc r25,__zero_reg__
 152 006e 01F0      		breq .L7
 153               		.loc 1 76 26 discriminator 4 view .LVU21
 154 0070 0E97      		sbiw r24,14
 155 0072 01F0      		breq .L7
 156               		.loc 1 76 41 view .LVU22
 157 0074 9E2D      		mov r25,r14
 158 0076 8F2D      		mov r24,r15
 159 0078 4C2D      		mov r20,r12
 160               	.LVL7:
 161               		.loc 1 76 41 view .LVU23
 162 007a 5D2D      		mov r21,r13
 163               	.L24:
 164               		.loc 1 76 16 view .LVU24
 165 007c 692F      		mov r22,r25
 166 007e 782F      		mov r23,r24
 167               	.L7:
 168               	.LVL8:
  77:noise.c       **** 	return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);
 169               		.loc 1 77 2 is_stmt 1 discriminator 10 view .LVU25
 170               		.loc 1 77 27 is_stmt 0 discriminator 10 view .LVU26
 171 0080 E0FF      		sbrs r30,0
 172 0082 00C0      		rjmp .L8
 173               		.loc 1 77 27 discriminator 1 view .LVU27
 174 0084 8981      		ldd r24,Y+1
 175 0086 9A81      		ldd r25,Y+2
 176 0088 AB81      		ldd r26,Y+3
 177 008a BC81      		ldd r27,Y+4
 178 008c B058      		subi r27,0x80
 179 008e 8983      		std Y+1,r24
 180 0090 9A83      		std Y+2,r25
 181 0092 AB83      		std Y+3,r26
 182 0094 BC83      		std Y+4,r27
 183               	.L8:
 184               		.loc 1 77 53 discriminator 4 view .LVU28
 185 0096 E1FD      		sbrc r30,1
 186               		.loc 1 77 53 discriminator 5 view .LVU29
 187 0098 7058      		subi r23,0x80
 188               	.LVL9:
 189               	.L9:
 190               		.loc 1 77 33 discriminator 8 view .LVU30
 191 009a 9A01      		movw r18,r20
 192 009c AB01      		movw r20,r22
 193 009e 6981      		ldd r22,Y+1
 194 00a0 7A81      		ldd r23,Y+2
 195 00a2 8B81      		ldd r24,Y+3
 196 00a4 9C81      		ldd r25,Y+4
 197 00a6 0E94 0000 		call __addsf3
 198               	.LVL10:
  78:noise.c       **** }
 199               		.loc 1 78 1 discriminator 8 view .LVU31
 200 00aa 6983      		std Y+1,r22
 201 00ac 7A83      		std Y+2,r23
 202 00ae 8B83      		std Y+3,r24
 203 00b0 9C83      		std Y+4,r25
 204 00b2 6981      		ldd r22,Y+1
 205 00b4 7A81      		ldd r23,Y+2
 206 00b6 8B81      		ldd r24,Y+3
 207 00b8 9C81      		ldd r25,Y+4
 208               	/* epilogue start */
 209 00ba 0F90      		pop __tmp_reg__
 210 00bc 0F90      		pop __tmp_reg__
 211 00be 0F90      		pop __tmp_reg__
 212 00c0 0F90      		pop __tmp_reg__
 213 00c2 0F90      		pop __tmp_reg__
 214 00c4 DF91      		pop r29
 215 00c6 CF91      		pop r28
 216 00c8 1F91      		pop r17
 217 00ca 0F91      		pop r16
 218               	.LVL11:
 219               		.loc 1 78 1 discriminator 8 view .LVU32
 220 00cc FF90      		pop r15
 221 00ce EF90      		pop r14
 222 00d0 DF90      		pop r13
 223 00d2 CF90      		pop r12
 224               	.LVL12:
 225               		.loc 1 78 1 discriminator 8 view .LVU33
 226 00d4 BF90      		pop r11
 227 00d6 AF90      		pop r10
 228 00d8 0895      		ret
 229               	.LVL13:
 230               	.L10:
  75:noise.c       **** 	v = h < 4 ? y : h == 12 || h == 14 ? x : z;
 231               		.loc 1 75 16 view .LVU34
 232 00da 4983      		std Y+1,r20
 233 00dc 5A83      		std Y+2,r21
 234 00de 6B83      		std Y+3,r22
 235 00e0 7C83      		std Y+4,r23
 236 00e2 00C0      		rjmp .L6
 237               	.LVL14:
 238               	.L11:
  76:noise.c       **** 	return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);
 239               		.loc 1 76 16 view .LVU35
 240 00e4 922F      		mov r25,r18
 241 00e6 832F      		mov r24,r19
 242 00e8 402F      		mov r20,r16
 243               	.LVL15:
  76:noise.c       **** 	return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);
 244               		.loc 1 76 16 view .LVU36
 245 00ea 512F      		mov r21,r17
 246 00ec 00C0      		rjmp .L24
 247               		.cfi_endproc
 248               	.LFE10:
 250               	.global	__ltsf2
 251               	.global	__gtsf2
 252               	.global	__subsf3
 253               	.global	__mulsf3
 255               	color_component:
 256               	.LVL16:
 257               	.LFB13:
 258               		.file 2 "main.c"
   1:main.c        **** #include <stdint.h>
   2:main.c        **** #include <stdlib.h> /* random */
   3:main.c        **** #include <avr/io.h>
   4:main.c        **** #include <avr/interrupt.h>
   5:main.c        **** #include <avr/pgmspace.h>
   6:main.c        **** #include "ws2812.c"
   7:main.c        **** #include "noise.c"
   8:main.c        **** 
   9:main.c        **** #define WIDTH               10
  10:main.c        **** #define HEIGHT              10
  11:main.c        **** #define PIXELS                (WIDTH * HEIGHT)
  12:main.c        **** #define BYTES                 (3 * PIXELS)
  13:main.c        **** 
  14:main.c        **** typedef struct { uint8_t R, G, B; } Color;
  15:main.c        **** 
  16:main.c        **** /* graphics */
  17:main.c        **** Color black = { 0, 0, 0 };
  18:main.c        **** static double time = 0;
  19:main.c        **** 
  20:main.c        **** static uint8_t _pixels[BYTES];
  21:main.c        **** static void pixel(uint8_t x, uint8_t y, Color *color);
  22:main.c        **** static void hsl_to_rgb(double h, double s, double l, Color *c);
  23:main.c        **** static double color_component(double temp1, double temp2, double temp3);
  24:main.c        **** 
  25:main.c        **** int main(void)
  26:main.c        **** {
  27:main.c        **** 	/* 1 ms timer, prescaler 64 */
  28:main.c        **** 	TCCR0A = (1 << WGM01);
  29:main.c        **** 	TCCR0B = (1 << CS02) | (1 << CS00);
  30:main.c        **** 	TIMSK0 = (1 << OCIE0A);
  31:main.c        **** 	OCR0A = 156;
  32:main.c        **** 	asm volatile("sei");
  33:main.c        **** 
  34:main.c        **** 	/*clear(&black);
  35:main.c        **** 	Color red = { 255, 0, 0 };
  36:main.c        **** 	pixel(0, 0, &red);*/
  37:main.c        **** 
  38:main.c        **** 	while(1) ;
  39:main.c        **** 	return 0;
  40:main.c        **** }
  41:main.c        **** 
  42:main.c        **** static void hsl_to_rgb(double h, double s, double l, Color *c)
  43:main.c        **** {
  44:main.c        **** 	double tR = 0, tG = 0, tB = 0, temp1, temp2;
  45:main.c        **** 	if(l != 0)
  46:main.c        **** 	{
  47:main.c        **** 		if(s == 0)
  48:main.c        **** 		{
  49:main.c        **** 			tR = tG = tB = l;
  50:main.c        **** 		}
  51:main.c        **** 		else
  52:main.c        **** 		{
  53:main.c        **** 			if(l < 0.5)
  54:main.c        **** 			{
  55:main.c        **** 				temp2 = l * (1.0 + s);
  56:main.c        **** 			}
  57:main.c        **** 			else
  58:main.c        **** 			{
  59:main.c        **** 				temp2 = l + s - (l * s);
  60:main.c        **** 			}
  61:main.c        **** 
  62:main.c        **** 			temp1 = 2.0 * l - temp2;
  63:main.c        **** 			tR = color_component(temp1, temp2, h + 1.0 / 3.0);
  64:main.c        **** 			tG = color_component(temp1, temp2, h);
  65:main.c        **** 			tB = color_component(temp1, temp2, h - 1.0 / 3.0);
  66:main.c        **** 		}
  67:main.c        **** 	}
  68:main.c        **** 
  69:main.c        **** 	c->R = tR * 255;
  70:main.c        **** 	c->G = tG * 255;
  71:main.c        **** 	c->B = tB * 255;
  72:main.c        **** }
  73:main.c        **** 
  74:main.c        **** static double color_component(double temp1, double temp2, double temp3)
  75:main.c        **** {
 259               		.loc 2 75 1 is_stmt 1 view -0
 260               		.cfi_startproc
 261               		.loc 2 75 1 is_stmt 0 view .LVU38
 262 00ee 4F92      		push r4
 263               	.LCFI12:
 264               		.cfi_def_cfa_offset 3
 265               		.cfi_offset 4, -2
 266 00f0 5F92      		push r5
 267               	.LCFI13:
 268               		.cfi_def_cfa_offset 4
 269               		.cfi_offset 5, -3
 270 00f2 6F92      		push r6
 271               	.LCFI14:
 272               		.cfi_def_cfa_offset 5
 273               		.cfi_offset 6, -4
 274 00f4 7F92      		push r7
 275               	.LCFI15:
 276               		.cfi_def_cfa_offset 6
 277               		.cfi_offset 7, -5
 278 00f6 8F92      		push r8
 279               	.LCFI16:
 280               		.cfi_def_cfa_offset 7
 281               		.cfi_offset 8, -6
 282 00f8 9F92      		push r9
 283               	.LCFI17:
 284               		.cfi_def_cfa_offset 8
 285               		.cfi_offset 9, -7
 286 00fa AF92      		push r10
 287               	.LCFI18:
 288               		.cfi_def_cfa_offset 9
 289               		.cfi_offset 10, -8
 290 00fc BF92      		push r11
 291               	.LCFI19:
 292               		.cfi_def_cfa_offset 10
 293               		.cfi_offset 11, -9
 294 00fe CF92      		push r12
 295               	.LCFI20:
 296               		.cfi_def_cfa_offset 11
 297               		.cfi_offset 12, -10
 298 0100 DF92      		push r13
 299               	.LCFI21:
 300               		.cfi_def_cfa_offset 12
 301               		.cfi_offset 13, -11
 302 0102 EF92      		push r14
 303               	.LCFI22:
 304               		.cfi_def_cfa_offset 13
 305               		.cfi_offset 14, -12
 306 0104 FF92      		push r15
 307               	.LCFI23:
 308               		.cfi_def_cfa_offset 14
 309               		.cfi_offset 15, -13
 310 0106 0F93      		push r16
 311               	.LCFI24:
 312               		.cfi_def_cfa_offset 15
 313               		.cfi_offset 16, -14
 314 0108 1F93      		push r17
 315               	.LCFI25:
 316               		.cfi_def_cfa_offset 16
 317               		.cfi_offset 17, -15
 318 010a CF93      		push r28
 319               	.LCFI26:
 320               		.cfi_def_cfa_offset 17
 321               		.cfi_offset 28, -16
 322 010c DF93      		push r29
 323               	.LCFI27:
 324               		.cfi_def_cfa_offset 18
 325               		.cfi_offset 29, -17
 326 010e 00D0      		rcall .
 327 0110 00D0      		rcall .
 328 0112 00D0      		rcall .
 329               	.LCFI28:
 330               		.cfi_def_cfa_offset 24
 331 0114 CDB7      		in r28,__SP_L__
 332 0116 DEB7      		in r29,__SP_H__
 333               	.LCFI29:
 334               		.cfi_def_cfa_register 28
 335               	/* prologue: function */
 336               	/* frame size = 6 */
 337               	/* stack size = 22 */
 338               	.L__stack_usage = 22
 339 0118 4B01      		movw r8,r22
 340 011a 5C01      		movw r10,r24
 341 011c 6901      		movw r12,r18
 342 011e 4E83      		std Y+6,r20
 343 0120 5D83      		std Y+5,r21
  76:main.c        **** 	if(temp3 < 0.0)
 344               		.loc 2 76 2 is_stmt 1 view .LVU39
 345               		.loc 2 76 4 is_stmt 0 view .LVU40
 346 0122 20E0      		ldi r18,0
 347 0124 30E0      		ldi r19,0
 348 0126 A901      		movw r20,r18
 349               	.LVL17:
 350               		.loc 2 76 4 view .LVU41
 351 0128 E982      		std Y+1,r14
 352 012a FA82      		std Y+2,r15
 353 012c 0B83      		std Y+3,r16
 354 012e 1C83      		std Y+4,r17
 355 0130 6981      		ldd r22,Y+1
 356 0132 7A81      		ldd r23,Y+2
 357 0134 8B81      		ldd r24,Y+3
 358 0136 9C81      		ldd r25,Y+4
 359               	.LVL18:
 360               		.loc 2 76 4 view .LVU42
 361 0138 0E94 0000 		call __ltsf2
 362               	.LVL19:
  77:main.c        **** 	{
  78:main.c        **** 		temp3 += 1.0;
 363               		.loc 2 78 9 view .LVU43
 364 013c 20E0      		ldi r18,0
 365 013e 30E0      		ldi r19,0
 366 0140 40E8      		ldi r20,lo8(-128)
 367 0142 5FE3      		ldi r21,lo8(63)
  76:main.c        **** 	if(temp3 < 0.0)
 368               		.loc 2 76 4 view .LVU44
 369 0144 87FF      		sbrs r24,7
 370 0146 00C0      		rjmp .L39
 371               		.loc 2 78 3 is_stmt 1 view .LVU45
 372               		.loc 2 78 9 is_stmt 0 view .LVU46
 373 0148 6981      		ldd r22,Y+1
 374 014a 7A81      		ldd r23,Y+2
 375 014c 8B81      		ldd r24,Y+3
 376 014e 9C81      		ldd r25,Y+4
 377 0150 0E94 0000 		call __addsf3
 378               	.LVL20:
 379               	.L42:
  79:main.c        **** 	}
  80:main.c        **** 	else if(temp3 > 1.0)
  81:main.c        **** 	{
  82:main.c        **** 		temp3 -= 1.0;
 380               		.loc 2 82 9 view .LVU47
 381 0154 7B01      		movw r14,r22
 382               	.LVL21:
 383               		.loc 2 82 9 view .LVU48
 384 0156 8C01      		movw r16,r24
 385               	.LVL22:
 386               	.L28:
  83:main.c        **** 	}
  84:main.c        **** 
  85:main.c        **** 	if(temp3 < 1.0 / 6.0)
 387               		.loc 2 85 2 is_stmt 1 view .LVU49
 388               		.loc 2 85 4 is_stmt 0 view .LVU50
 389 0158 2BEA      		ldi r18,lo8(-85)
 390 015a 3AEA      		ldi r19,lo8(-86)
 391 015c 4AE2      		ldi r20,lo8(42)
 392 015e 5EE3      		ldi r21,lo8(62)
 393 0160 E982      		std Y+1,r14
 394 0162 FA82      		std Y+2,r15
 395 0164 0B83      		std Y+3,r16
 396 0166 1C83      		std Y+4,r17
 397 0168 6981      		ldd r22,Y+1
 398 016a 7A81      		ldd r23,Y+2
 399 016c 8B81      		ldd r24,Y+3
 400 016e 9C81      		ldd r25,Y+4
 401 0170 0E94 0000 		call __ltsf2
 402               	.LVL23:
 403 0174 87FF      		sbrs r24,7
 404 0176 00C0      		rjmp .L40
  86:main.c        **** 	{
  87:main.c        **** 		return temp1 + (temp2 - temp1) * 6.0 * temp3;
 405               		.loc 2 87 3 is_stmt 1 view .LVU51
 406               		.loc 2 87 25 is_stmt 0 view .LVU52
 407 0178 2401      		movw r4,r8
 408 017a 3501      		movw r6,r10
 409 017c 9401      		movw r18,r8
 410 017e A501      		movw r20,r10
 411 0180 9E81      		ldd r25,Y+6
 412 0182 8D81      		ldd r24,Y+5
 413 0184 C982      		std Y+1,r12
 414 0186 DA82      		std Y+2,r13
 415 0188 9B83      		std Y+3,r25
 416 018a 8C83      		std Y+4,r24
 417 018c 6981      		ldd r22,Y+1
 418 018e 7A81      		ldd r23,Y+2
 419 0190 8B81      		ldd r24,Y+3
 420 0192 9C81      		ldd r25,Y+4
 421 0194 0E94 0000 		call __subsf3
 422               	.LVL24:
 423               		.loc 2 87 34 view .LVU53
 424 0198 20E0      		ldi r18,0
 425 019a 30E0      		ldi r19,0
 426 019c 40EC      		ldi r20,lo8(-64)
 427 019e 50E4      		ldi r21,lo8(64)
 428 01a0 6983      		std Y+1,r22
 429 01a2 7A83      		std Y+2,r23
 430 01a4 8B83      		std Y+3,r24
 431 01a6 9C83      		std Y+4,r25
 432 01a8 6981      		ldd r22,Y+1
 433 01aa 7A81      		ldd r23,Y+2
 434 01ac 8B81      		ldd r24,Y+3
 435 01ae 9C81      		ldd r25,Y+4
 436 01b0 0E94 0000 		call __mulsf3
 437               	.LVL25:
 438               		.loc 2 87 40 view .LVU54
 439 01b4 9701      		movw r18,r14
 440 01b6 A801      		movw r20,r16
 441               	.L43:
  88:main.c        **** 	}
  89:main.c        **** 	else if(temp3 < 0.5)
  90:main.c        **** 	{
  91:main.c        **** 		return temp2;
  92:main.c        **** 	}
  93:main.c        **** 	else if(temp3 < 2.0 / 3.0)
  94:main.c        **** 	{
  95:main.c        **** 		return temp1 + ((temp2 - temp1) * ((2.0 / 3.0) - temp3) * 6.0);
 442               		.loc 2 95 59 view .LVU55
 443 01b8 6983      		std Y+1,r22
 444 01ba 7A83      		std Y+2,r23
 445 01bc 8B83      		std Y+3,r24
 446 01be 9C83      		std Y+4,r25
 447 01c0 6981      		ldd r22,Y+1
 448 01c2 7A81      		ldd r23,Y+2
 449 01c4 8B81      		ldd r24,Y+3
 450 01c6 9C81      		ldd r25,Y+4
 451 01c8 0E94 0000 		call __mulsf3
 452               	.LVL26:
 453               		.loc 2 95 16 view .LVU56
 454 01cc 242D      		mov r18,r4
 455 01ce 352D      		mov r19,r5
 456 01d0 462D      		mov r20,r6
 457 01d2 572D      		mov r21,r7
 458 01d4 6983      		std Y+1,r22
 459 01d6 7A83      		std Y+2,r23
 460 01d8 8B83      		std Y+3,r24
 461 01da 9C83      		std Y+4,r25
 462 01dc 6981      		ldd r22,Y+1
 463 01de 7A81      		ldd r23,Y+2
 464 01e0 8B81      		ldd r24,Y+3
 465 01e2 9C81      		ldd r25,Y+4
 466 01e4 0E94 0000 		call __addsf3
 467               	.LVL27:
 468 01e8 6B01      		movw r12,r22
 469 01ea 8E83      		std Y+6,r24
 470 01ec 9D83      		std Y+5,r25
 471               	.L32:
  96:main.c        **** 	}
  97:main.c        **** 	else
  98:main.c        **** 	{
  99:main.c        **** 		return temp1;
 100:main.c        **** 	}
 101:main.c        **** }
 472               		.loc 2 101 1 view .LVU57
 473 01ee 9E81      		ldd r25,Y+6
 474 01f0 8D81      		ldd r24,Y+5
 475 01f2 C982      		std Y+1,r12
 476 01f4 DA82      		std Y+2,r13
 477 01f6 9B83      		std Y+3,r25
 478 01f8 8C83      		std Y+4,r24
 479 01fa 6981      		ldd r22,Y+1
 480 01fc 7A81      		ldd r23,Y+2
 481 01fe 8B81      		ldd r24,Y+3
 482 0200 9C81      		ldd r25,Y+4
 483               	/* epilogue start */
 484 0202 2696      		adiw r28,6
 485 0204 0FB6      		in __tmp_reg__,__SREG__
 486 0206 F894      		cli
 487 0208 DEBF      		out __SP_H__,r29
 488 020a 0FBE      		out __SREG__,__tmp_reg__
 489 020c CDBF      		out __SP_L__,r28
 490 020e DF91      		pop r29
 491 0210 CF91      		pop r28
 492 0212 1F91      		pop r17
 493               	.LVL28:
 494               		.loc 2 101 1 view .LVU58
 495 0214 0F91      		pop r16
 496               		.loc 2 101 1 view .LVU59
 497 0216 FF90      		pop r15
 498               		.loc 2 101 1 view .LVU60
 499 0218 EF90      		pop r14
 500               		.loc 2 101 1 view .LVU61
 501 021a DF90      		pop r13
 502 021c CF90      		pop r12
 503 021e BF90      		pop r11
 504 0220 AF90      		pop r10
 505 0222 9F90      		pop r9
 506 0224 8F90      		pop r8
 507 0226 7F90      		pop r7
 508 0228 6F90      		pop r6
 509 022a 5F90      		pop r5
 510 022c 4F90      		pop r4
 511 022e 0895      		ret
 512               	.LVL29:
 513               	.L39:
  80:main.c        **** 	{
 514               		.loc 2 80 7 is_stmt 1 view .LVU62
  80:main.c        **** 	{
 515               		.loc 2 80 9 is_stmt 0 view .LVU63
 516 0230 E982      		std Y+1,r14
 517 0232 FA82      		std Y+2,r15
 518 0234 0B83      		std Y+3,r16
 519 0236 1C83      		std Y+4,r17
 520 0238 6981      		ldd r22,Y+1
 521 023a 7A81      		ldd r23,Y+2
 522 023c 8B81      		ldd r24,Y+3
 523 023e 9C81      		ldd r25,Y+4
 524 0240 0E94 0000 		call __gtsf2
 525               	.LVL30:
 526 0244 1816      		cp __zero_reg__,r24
 527 0246 04F0      		brlt .+2
 528 0248 00C0      		rjmp .L28
  82:main.c        **** 	}
 529               		.loc 2 82 3 is_stmt 1 view .LVU64
  82:main.c        **** 	}
 530               		.loc 2 82 9 is_stmt 0 view .LVU65
 531 024a 20E0      		ldi r18,0
 532 024c 30E0      		ldi r19,0
 533 024e 40E8      		ldi r20,lo8(-128)
 534 0250 5FE3      		ldi r21,lo8(63)
 535 0252 6981      		ldd r22,Y+1
 536 0254 7A81      		ldd r23,Y+2
 537 0256 8B81      		ldd r24,Y+3
 538 0258 9C81      		ldd r25,Y+4
 539 025a 0E94 0000 		call __subsf3
 540               	.LVL31:
 541 025e 00C0      		rjmp .L42
 542               	.LVL32:
 543               	.L40:
  89:main.c        **** 	{
 544               		.loc 2 89 7 is_stmt 1 view .LVU66
  89:main.c        **** 	{
 545               		.loc 2 89 9 is_stmt 0 view .LVU67
 546 0260 20E0      		ldi r18,0
 547 0262 30E0      		ldi r19,0
 548 0264 40E0      		ldi r20,0
 549 0266 5FE3      		ldi r21,lo8(63)
 550 0268 E982      		std Y+1,r14
 551 026a FA82      		std Y+2,r15
 552 026c 0B83      		std Y+3,r16
 553 026e 1C83      		std Y+4,r17
 554 0270 6981      		ldd r22,Y+1
 555 0272 7A81      		ldd r23,Y+2
 556 0274 8B81      		ldd r24,Y+3
 557 0276 9C81      		ldd r25,Y+4
 558 0278 0E94 0000 		call __ltsf2
 559               	.LVL33:
 560 027c 87FD      		sbrc r24,7
 561 027e 00C0      		rjmp .L32
  93:main.c        **** 	{
 562               		.loc 2 93 7 is_stmt 1 view .LVU68
  93:main.c        **** 	{
 563               		.loc 2 93 9 is_stmt 0 view .LVU69
 564 0280 2BEA      		ldi r18,lo8(-85)
 565 0282 3AEA      		ldi r19,lo8(-86)
 566 0284 4AE2      		ldi r20,lo8(42)
 567 0286 5FE3      		ldi r21,lo8(63)
 568 0288 6981      		ldd r22,Y+1
 569 028a 7A81      		ldd r23,Y+2
 570 028c 8B81      		ldd r24,Y+3
 571 028e 9C81      		ldd r25,Y+4
 572 0290 0E94 0000 		call __ltsf2
 573               	.LVL34:
 574 0294 87FF      		sbrs r24,7
 575 0296 00C0      		rjmp .L41
  95:main.c        **** 	}
 576               		.loc 2 95 3 is_stmt 1 view .LVU70
  95:main.c        **** 	}
 577               		.loc 2 95 26 is_stmt 0 view .LVU71
 578 0298 2401      		movw r4,r8
 579 029a 3501      		movw r6,r10
 580 029c 9401      		movw r18,r8
 581 029e A501      		movw r20,r10
 582 02a0 9E81      		ldd r25,Y+6
 583 02a2 8D81      		ldd r24,Y+5
 584 02a4 C982      		std Y+1,r12
 585 02a6 DA82      		std Y+2,r13
 586 02a8 9B83      		std Y+3,r25
 587 02aa 8C83      		std Y+4,r24
 588 02ac 6981      		ldd r22,Y+1
 589 02ae 7A81      		ldd r23,Y+2
 590 02b0 8B81      		ldd r24,Y+3
 591 02b2 9C81      		ldd r25,Y+4
 592 02b4 0E94 0000 		call __subsf3
 593               	.LVL35:
 594 02b8 6B01      		movw r12,r22
 595 02ba 8E83      		std Y+6,r24
 596 02bc 9D83      		std Y+5,r25
  95:main.c        **** 	}
 597               		.loc 2 95 50 view .LVU72
 598 02be 9701      		movw r18,r14
 599 02c0 A801      		movw r20,r16
 600 02c2 6BEA      		ldi r22,lo8(-85)
 601 02c4 7AEA      		ldi r23,lo8(-86)
 602 02c6 8AE2      		ldi r24,lo8(42)
 603 02c8 9FE3      		ldi r25,lo8(63)
 604 02ca 0E94 0000 		call __subsf3
 605               	.LVL36:
  95:main.c        **** 	}
 606               		.loc 2 95 35 view .LVU73
 607 02ce 9B01      		movw r18,r22
 608 02d0 AC01      		movw r20,r24
 609 02d2 C982      		std Y+1,r12
 610 02d4 DA82      		std Y+2,r13
 611 02d6 8E81      		ldd r24,Y+6
 612 02d8 8B83      		std Y+3,r24
 613 02da 8D81      		ldd r24,Y+5
 614 02dc 8C83      		std Y+4,r24
 615 02de 6981      		ldd r22,Y+1
 616 02e0 7A81      		ldd r23,Y+2
 617 02e2 8B81      		ldd r24,Y+3
 618 02e4 9C81      		ldd r25,Y+4
 619 02e6 0E94 0000 		call __mulsf3
 620               	.LVL37:
  95:main.c        **** 	}
 621               		.loc 2 95 59 view .LVU74
 622 02ea 20E0      		ldi r18,0
 623 02ec 30E0      		ldi r19,0
 624 02ee 40EC      		ldi r20,lo8(-64)
 625 02f0 50E4      		ldi r21,lo8(64)
 626 02f2 00C0      		rjmp .L43
 627               	.L41:
  99:main.c        **** 	}
 628               		.loc 2 99 10 view .LVU75
 629 02f4 6401      		movw r12,r8
 630 02f6 AE82      		std Y+6,r10
 631 02f8 BD82      		std Y+5,r11
 632 02fa 00C0      		rjmp .L32
 633               		.cfi_endproc
 634               	.LFE13:
 636               		.section	.text.startup,"ax",@progbits
 637               	.global	main
 639               	main:
 640               	.LFB11:
  26:main.c        **** 	/* 1 ms timer, prescaler 64 */
 641               		.loc 2 26 1 is_stmt 1 view -0
 642               		.cfi_startproc
 643               	/* prologue: function */
 644               	/* frame size = 0 */
 645               	/* stack size = 0 */
 646               	.L__stack_usage = 0
  28:main.c        **** 	TCCR0B = (1 << CS02) | (1 << CS00);
 647               		.loc 2 28 2 view .LVU77
  28:main.c        **** 	TCCR0B = (1 << CS02) | (1 << CS00);
 648               		.loc 2 28 9 is_stmt 0 view .LVU78
 649 0000 82E0      		ldi r24,lo8(2)
 650 0002 84BD      		out 0x24,r24
  29:main.c        **** 	TIMSK0 = (1 << OCIE0A);
 651               		.loc 2 29 2 is_stmt 1 view .LVU79
  29:main.c        **** 	TIMSK0 = (1 << OCIE0A);
 652               		.loc 2 29 9 is_stmt 0 view .LVU80
 653 0004 95E0      		ldi r25,lo8(5)
 654 0006 95BD      		out 0x25,r25
  30:main.c        **** 	OCR0A = 156;
 655               		.loc 2 30 2 is_stmt 1 view .LVU81
  30:main.c        **** 	OCR0A = 156;
 656               		.loc 2 30 9 is_stmt 0 view .LVU82
 657 0008 8093 6E00 		sts 110,r24
  31:main.c        **** 	asm volatile("sei");
 658               		.loc 2 31 2 is_stmt 1 view .LVU83
  31:main.c        **** 	asm volatile("sei");
 659               		.loc 2 31 8 is_stmt 0 view .LVU84
 660 000c 8CE9      		ldi r24,lo8(-100)
 661 000e 87BD      		out 0x27,r24
  32:main.c        **** 
 662               		.loc 2 32 2 is_stmt 1 view .LVU85
 663               	/* #APP */
 664               	 ;  32 "main.c" 1
 665 0010 7894      		sei
 666               	 ;  0 "" 2
 667               	/* #NOAPP */
 668               	.L45:
  38:main.c        **** 	return 0;
 669               		.loc 2 38 2 discriminator 1 view .LVU86
  38:main.c        **** 	return 0;
 670               		.loc 2 38 11 discriminator 1 view .LVU87
  38:main.c        **** 	return 0;
 671               		.loc 2 38 7 discriminator 1 view .LVU88
 672 0012 00C0      		rjmp .L45
 673               		.cfi_endproc
 674               	.LFE11:
 676               	.global	__fixsfsi
 677               	.global	__floatsisf
 678               	.global	__floatunsisf
 679               	.global	__divsf3
 680               	.global	__fixunssfsi
 681               		.text
 682               	.global	__vector_14
 684               	__vector_14:
 685               	.LFB15:
 102:main.c        **** 
 103:main.c        **** static void pixel(uint8_t x, uint8_t y, Color *color)
 104:main.c        **** {
 105:main.c        **** 	if(x < WIDTH && y < HEIGHT)
 106:main.c        **** 	{
 107:main.c        **** 		uint16_t i;
 108:main.c        **** 		x = (WIDTH - 1) - x;
 109:main.c        **** 		y = (HEIGHT - 1) - y;
 110:main.c        **** 		i = 3 * ((y % 2)
 111:main.c        **** 			? ((WIDTH * y) + ((WIDTH - 1) - x)) : (WIDTH * y + x));
 112:main.c        **** 
 113:main.c        **** 		_pixels[i] = color->G;
 114:main.c        **** 		_pixels[++i] = color->R;
 115:main.c        **** 		_pixels[++i] = color->B;
 116:main.c        **** 	}
 117:main.c        **** }
 118:main.c        **** 
 119:main.c        **** ISR(TIMER0_COMPA_vect)
 120:main.c        **** {
 686               		.loc 2 120 1 view -0
 687               		.cfi_startproc
 688 02fc 1F92      		push r1
 689               	.LCFI30:
 690               		.cfi_def_cfa_offset 3
 691               		.cfi_offset 1, -2
 692 02fe 0F92      		push r0
 693               	.LCFI31:
 694               		.cfi_def_cfa_offset 4
 695               		.cfi_offset 0, -3
 696 0300 0FB6      		in r0,__SREG__
 697 0302 0F92      		push r0
 698 0304 1124      		clr __zero_reg__
 699 0306 2F92      		push r2
 700               	.LCFI32:
 701               		.cfi_def_cfa_offset 5
 702               		.cfi_offset 2, -4
 703 0308 3F92      		push r3
 704               	.LCFI33:
 705               		.cfi_def_cfa_offset 6
 706               		.cfi_offset 3, -5
 707 030a 4F92      		push r4
 708               	.LCFI34:
 709               		.cfi_def_cfa_offset 7
 710               		.cfi_offset 4, -6
 711 030c 5F92      		push r5
 712               	.LCFI35:
 713               		.cfi_def_cfa_offset 8
 714               		.cfi_offset 5, -7
 715 030e 6F92      		push r6
 716               	.LCFI36:
 717               		.cfi_def_cfa_offset 9
 718               		.cfi_offset 6, -8
 719 0310 7F92      		push r7
 720               	.LCFI37:
 721               		.cfi_def_cfa_offset 10
 722               		.cfi_offset 7, -9
 723 0312 8F92      		push r8
 724               	.LCFI38:
 725               		.cfi_def_cfa_offset 11
 726               		.cfi_offset 8, -10
 727 0314 9F92      		push r9
 728               	.LCFI39:
 729               		.cfi_def_cfa_offset 12
 730               		.cfi_offset 9, -11
 731 0316 AF92      		push r10
 732               	.LCFI40:
 733               		.cfi_def_cfa_offset 13
 734               		.cfi_offset 10, -12
 735 0318 BF92      		push r11
 736               	.LCFI41:
 737               		.cfi_def_cfa_offset 14
 738               		.cfi_offset 11, -13
 739 031a CF92      		push r12
 740               	.LCFI42:
 741               		.cfi_def_cfa_offset 15
 742               		.cfi_offset 12, -14
 743 031c DF92      		push r13
 744               	.LCFI43:
 745               		.cfi_def_cfa_offset 16
 746               		.cfi_offset 13, -15
 747 031e EF92      		push r14
 748               	.LCFI44:
 749               		.cfi_def_cfa_offset 17
 750               		.cfi_offset 14, -16
 751 0320 FF92      		push r15
 752               	.LCFI45:
 753               		.cfi_def_cfa_offset 18
 754               		.cfi_offset 15, -17
 755 0322 0F93      		push r16
 756               	.LCFI46:
 757               		.cfi_def_cfa_offset 19
 758               		.cfi_offset 16, -18
 759 0324 1F93      		push r17
 760               	.LCFI47:
 761               		.cfi_def_cfa_offset 20
 762               		.cfi_offset 17, -19
 763 0326 2F93      		push r18
 764               	.LCFI48:
 765               		.cfi_def_cfa_offset 21
 766               		.cfi_offset 18, -20
 767 0328 3F93      		push r19
 768               	.LCFI49:
 769               		.cfi_def_cfa_offset 22
 770               		.cfi_offset 19, -21
 771 032a 4F93      		push r20
 772               	.LCFI50:
 773               		.cfi_def_cfa_offset 23
 774               		.cfi_offset 20, -22
 775 032c 5F93      		push r21
 776               	.LCFI51:
 777               		.cfi_def_cfa_offset 24
 778               		.cfi_offset 21, -23
 779 032e 6F93      		push r22
 780               	.LCFI52:
 781               		.cfi_def_cfa_offset 25
 782               		.cfi_offset 22, -24
 783 0330 7F93      		push r23
 784               	.LCFI53:
 785               		.cfi_def_cfa_offset 26
 786               		.cfi_offset 23, -25
 787 0332 8F93      		push r24
 788               	.LCFI54:
 789               		.cfi_def_cfa_offset 27
 790               		.cfi_offset 24, -26
 791 0334 9F93      		push r25
 792               	.LCFI55:
 793               		.cfi_def_cfa_offset 28
 794               		.cfi_offset 25, -27
 795 0336 AF93      		push r26
 796               	.LCFI56:
 797               		.cfi_def_cfa_offset 29
 798               		.cfi_offset 26, -28
 799 0338 BF93      		push r27
 800               	.LCFI57:
 801               		.cfi_def_cfa_offset 30
 802               		.cfi_offset 27, -29
 803 033a EF93      		push r30
 804               	.LCFI58:
 805               		.cfi_def_cfa_offset 31
 806               		.cfi_offset 30, -30
 807 033c FF93      		push r31
 808               	.LCFI59:
 809               		.cfi_def_cfa_offset 32
 810               		.cfi_offset 31, -31
 811 033e CF93      		push r28
 812               	.LCFI60:
 813               		.cfi_def_cfa_offset 33
 814               		.cfi_offset 28, -32
 815 0340 DF93      		push r29
 816               	.LCFI61:
 817               		.cfi_def_cfa_offset 34
 818               		.cfi_offset 29, -33
 819 0342 CDB7      		in r28,__SP_L__
 820 0344 DEB7      		in r29,__SP_H__
 821               	.LCFI62:
 822               		.cfi_def_cfa_register 28
 823 0346 C454      		subi r28,68
 824 0348 D109      		sbc r29,__zero_reg__
 825               	.LCFI63:
 826               		.cfi_def_cfa_offset 102
 827 034a DEBF      		out __SP_H__,r29
 828 034c CDBF      		out __SP_L__,r28
 829               	/* prologue: Signal */
 830               	/* frame size = 68 */
 831               	/* stack size = 101 */
 832               	.L__stack_usage = 101
 121:main.c        **** 	double v;
 833               		.loc 2 121 2 view .LVU90
 122:main.c        **** 	Color c;
 834               		.loc 2 122 2 view .LVU91
 123:main.c        **** 	uint8_t x, y;
 835               		.loc 2 123 2 view .LVU92
 124:main.c        **** 	for(x = 0; x < WIDTH; x++)
 836               		.loc 2 124 2 view .LVU93
 837               	.LVL38:
 838               		.loc 2 124 13 view .LVU94
 125:main.c        **** 	{
 126:main.c        **** 		for(y = 0; y < HEIGHT; y++)
 127:main.c        **** 		{
 128:main.c        **** 			v = Noise((double)x / WIDTH, (double)y / HEIGHT, time);
 839               		.loc 2 128 8 is_stmt 0 view .LVU95
 840 034e 8091 0000 		lds r24,time
 841 0352 9091 0000 		lds r25,time+1
 842 0356 A091 0000 		lds r26,time+2
 843 035a B091 0000 		lds r27,time+3
 844 035e 89A7      		std Y+41,r24
 845 0360 9AA7      		std Y+42,r25
 846 0362 ABA7      		std Y+43,r26
 847 0364 BCA7      		std Y+44,r27
 848               	.LBB45:
 849               	.LBB46:
  28:noise.c       **** 	X = floorX & 0xFF;
 850               		.loc 1 28 9 view .LVU96
 851 0366 BC01      		movw r22,r24
 852 0368 CD01      		movw r24,r26
 853 036a 0E94 0000 		call __fixsfsi
 854               	.LVL39:
 855 036e 462F      		mov r20,r22
 856 0370 572F      		mov r21,r23
  31:noise.c       **** 	x -= floorX;
 857               		.loc 1 31 4 view .LVU97
 858 0372 DA01      		movw r26,r20
 859 0374 BB27      		clr r27
 860 0376 BE8B      		std Y+22,r27
 861 0378 AD8B      		std Y+21,r26
  34:noise.c       **** 	u = fade(x);
 862               		.loc 1 34 4 view .LVU98
 863 037a CA01      		movw r24,r20
 864 037c 550F      		lsl r21
 865 037e AA0B      		sbc r26,r26
 866 0380 BB0B      		sbc r27,r27
 867 0382 8D83      		std Y+5,r24
 868 0384 9E83      		std Y+6,r25
 869 0386 AF83      		std Y+7,r26
 870 0388 B887      		std Y+8,r27
 871 038a BC01      		movw r22,r24
 872 038c CD01      		movw r24,r26
 873 038e 0E94 0000 		call __floatsisf
 874               	.LVL40:
 875 0392 9B01      		movw r18,r22
 876 0394 AC01      		movw r20,r24
 877 0396 69A5      		ldd r22,Y+41
 878 0398 7AA5      		ldd r23,Y+42
 879 039a 8BA5      		ldd r24,Y+43
 880 039c 9CA5      		ldd r25,Y+44
 881 039e 0E94 0000 		call __subsf3
 882               	.LVL41:
 883 03a2 962E      		mov r9,r22
 884 03a4 872E      		mov r8,r23
 885 03a6 782E      		mov r7,r24
 886 03a8 692E      		mov r6,r25
 887               	.LBB47:
 888               	.LBB48:
  62:noise.c       **** }
 889               		.loc 1 62 29 view .LVU99
 890 03aa 20E0      		ldi r18,0
 891 03ac 30E0      		ldi r19,0
 892 03ae 40EC      		ldi r20,lo8(-64)
 893 03b0 50E4      		ldi r21,lo8(64)
 894 03b2 6D83      		std Y+5,r22
 895 03b4 7E83      		std Y+6,r23
 896 03b6 8F83      		std Y+7,r24
 897 03b8 9887      		std Y+8,r25
 898 03ba 6D81      		ldd r22,Y+5
 899 03bc 7E81      		ldd r23,Y+6
 900 03be 8F81      		ldd r24,Y+7
 901 03c0 9885      		ldd r25,Y+8
 902 03c2 0E94 0000 		call __mulsf3
 903               	.LVL42:
  62:noise.c       **** }
 904               		.loc 1 62 33 view .LVU100
 905 03c6 20E0      		ldi r18,0
 906 03c8 30E0      		ldi r19,0
 907 03ca 40E7      		ldi r20,lo8(112)
 908 03cc 51E4      		ldi r21,lo8(65)
 909 03ce 6D83      		std Y+5,r22
 910 03d0 7E83      		std Y+6,r23
 911 03d2 8F83      		std Y+7,r24
 912 03d4 9887      		std Y+8,r25
 913 03d6 6D81      		ldd r22,Y+5
 914 03d8 7E81      		ldd r23,Y+6
 915 03da 8F81      		ldd r24,Y+7
 916 03dc 9885      		ldd r25,Y+8
 917 03de 0E94 0000 		call __subsf3
 918               	.LVL43:
  62:noise.c       **** }
 919               		.loc 1 62 24 view .LVU101
 920 03e2 292D      		mov r18,r9
 921 03e4 382D      		mov r19,r8
 922 03e6 472D      		mov r20,r7
 923 03e8 562D      		mov r21,r6
 924 03ea 6D83      		std Y+5,r22
 925 03ec 7E83      		std Y+6,r23
 926 03ee 8F83      		std Y+7,r24
 927 03f0 9887      		std Y+8,r25
 928 03f2 6D81      		ldd r22,Y+5
 929 03f4 7E81      		ldd r23,Y+6
 930 03f6 8F81      		ldd r24,Y+7
 931 03f8 9885      		ldd r25,Y+8
 932 03fa 0E94 0000 		call __mulsf3
 933               	.LVL44:
  62:noise.c       **** }
 934               		.loc 1 62 39 view .LVU102
 935 03fe 20E0      		ldi r18,0
 936 0400 30E0      		ldi r19,0
 937 0402 40E2      		ldi r20,lo8(32)
 938 0404 51E4      		ldi r21,lo8(65)
 939 0406 6D83      		std Y+5,r22
 940 0408 7E83      		std Y+6,r23
 941 040a 8F83      		std Y+7,r24
 942 040c 9887      		std Y+8,r25
 943 040e 6D81      		ldd r22,Y+5
 944 0410 7E81      		ldd r23,Y+6
 945 0412 8F81      		ldd r24,Y+7
 946 0414 9885      		ldd r25,Y+8
 947 0416 0E94 0000 		call __addsf3
 948               	.LVL45:
 949 041a 8B01      		movw r16,r22
 950 041c 8987      		std Y+9,r24
 951 041e 9983      		std Y+1,r25
  62:noise.c       **** }
 952               		.loc 1 62 11 view .LVU103
 953 0420 292D      		mov r18,r9
 954 0422 382D      		mov r19,r8
 955 0424 472D      		mov r20,r7
 956 0426 562D      		mov r21,r6
 957 0428 9D82      		std Y+5,r9
 958 042a 8E82      		std Y+6,r8
 959 042c 7F82      		std Y+7,r7
 960 042e 6886      		std Y+8,r6
 961 0430 6D81      		ldd r22,Y+5
 962 0432 7E81      		ldd r23,Y+6
 963 0434 8F81      		ldd r24,Y+7
 964 0436 9885      		ldd r25,Y+8
 965 0438 0E94 0000 		call __mulsf3
 966               	.LVL46:
  62:noise.c       **** }
 967               		.loc 1 62 15 view .LVU104
 968 043c 292D      		mov r18,r9
 969 043e 382D      		mov r19,r8
 970 0440 472D      		mov r20,r7
 971 0442 562D      		mov r21,r6
 972 0444 6D83      		std Y+5,r22
 973 0446 7E83      		std Y+6,r23
 974 0448 8F83      		std Y+7,r24
 975 044a 9887      		std Y+8,r25
 976 044c 6D81      		ldd r22,Y+5
 977 044e 7E81      		ldd r23,Y+6
 978 0450 8F81      		ldd r24,Y+7
 979 0452 9885      		ldd r25,Y+8
 980 0454 0E94 0000 		call __mulsf3
 981               	.LVL47:
  62:noise.c       **** }
 982               		.loc 1 62 19 view .LVU105
 983 0458 9B01      		movw r18,r22
 984 045a AC01      		movw r20,r24
 985 045c 0D83      		std Y+5,r16
 986 045e 1E83      		std Y+6,r17
 987 0460 9985      		ldd r25,Y+9
 988 0462 9F83      		std Y+7,r25
 989 0464 A981      		ldd r26,Y+1
 990 0466 A887      		std Y+8,r26
 991 0468 6D81      		ldd r22,Y+5
 992 046a 7E81      		ldd r23,Y+6
 993 046c 8F81      		ldd r24,Y+7
 994 046e 9885      		ldd r25,Y+8
 995 0470 0E94 0000 		call __mulsf3
 996               	.LVL48:
 997 0474 6EAF      		std Y+62,r22
 998 0476 7FAF      		std Y+63,r23
 999 0478 2196      		adiw r28,64-63
 1000 047a 8FAF      		std Y+63,r24
 1001 047c 2197      		sbiw r28,64-63
 1002 047e 2296      		adiw r28,65-63
 1003 0480 9FAF      		std Y+63,r25
 1004 0482 2297      		sbiw r28,65-63
 1005               	.LBE48:
 1006               	.LBE47:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1007               		.loc 1 44 9 view .LVU106
 1008 0484 20E0      		ldi r18,0
 1009 0486 30E0      		ldi r19,0
 1010 0488 40E8      		ldi r20,lo8(-128)
 1011 048a 5FE3      		ldi r21,lo8(63)
 1012 048c 9D82      		std Y+5,r9
 1013 048e 8E82      		std Y+6,r8
 1014 0490 7F82      		std Y+7,r7
 1015 0492 6886      		std Y+8,r6
 1016 0494 6D81      		ldd r22,Y+5
 1017 0496 7E81      		ldd r23,Y+6
 1018 0498 8F81      		ldd r24,Y+7
 1019 049a 9885      		ldd r25,Y+8
 1020 049c 0E94 0000 		call __subsf3
 1021               	.LVL49:
 1022 04a0 6B8F      		std Y+27,r22
 1023 04a2 7C8F      		std Y+28,r23
 1024 04a4 8D8F      		std Y+29,r24
 1025 04a6 9E8F      		std Y+30,r25
 1026 04a8 2EE0      		ldi r18,lo8(14)
 1027 04aa 31E0      		ldi r19,lo8(1)
 1028 04ac 388F      		std Y+24,r19
 1029 04ae 2F8B      		std Y+23,r18
 1030 04b0 1A8E      		std Y+26,__zero_reg__
 1031 04b2 198E      		std Y+25,__zero_reg__
 1032               	.LVL50:
 1033               	.L47:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1034               		.loc 1 44 9 view .LVU107
 1035               	.LBE46:
 1036               	.LBE45:
 126:main.c        **** 		{
 1037               		.loc 2 126 14 is_stmt 1 view .LVU108
 1038               		.loc 2 128 14 is_stmt 0 view .LVU109
 1039 04b4 998D      		ldd r25,Y+25
 1040 04b6 892F      		mov r24,r25
 1041 04b8 90E0      		ldi r25,0
 1042 04ba B0E0      		ldi r27,0
 1043 04bc A0E0      		ldi r26,0
 1044 04be 8D83      		std Y+5,r24
 1045 04c0 9E83      		std Y+6,r25
 1046 04c2 AF83      		std Y+7,r26
 1047 04c4 B887      		std Y+8,r27
 1048 04c6 BC01      		movw r22,r24
 1049 04c8 CD01      		movw r24,r26
 1050 04ca 0E94 0000 		call __floatunsisf
 1051               	.LVL51:
 1052               		.loc 2 128 8 view .LVU110
 1053 04ce 20E0      		ldi r18,0
 1054 04d0 30E0      		ldi r19,0
 1055 04d2 40E2      		ldi r20,lo8(32)
 1056 04d4 51E4      		ldi r21,lo8(65)
 1057 04d6 6D83      		std Y+5,r22
 1058 04d8 7E83      		std Y+6,r23
 1059 04da 8F83      		std Y+7,r24
 1060 04dc 9887      		std Y+8,r25
 1061 04de 6D81      		ldd r22,Y+5
 1062 04e0 7E81      		ldd r23,Y+6
 1063 04e2 8F81      		ldd r24,Y+7
 1064 04e4 9885      		ldd r25,Y+8
 1065 04e6 0E94 0000 		call __divsf3
 1066               	.LVL52:
 1067 04ea 7B01      		movw r14,r22
 1068 04ec 8C01      		movw r16,r24
 1069               	.LBB73:
 1070               	.LBB71:
  26:noise.c       **** 	floorY = (int)y;
 1071               		.loc 1 26 9 view .LVU111
 1072 04ee 6D83      		std Y+5,r22
 1073 04f0 FE82      		std Y+6,r15
 1074 04f2 8F83      		std Y+7,r24
 1075 04f4 1887      		std Y+8,r17
 1076 04f6 6D81      		ldd r22,Y+5
 1077 04f8 7E81      		ldd r23,Y+6
 1078 04fa 8F81      		ldd r24,Y+7
 1079 04fc 9885      		ldd r25,Y+8
 1080 04fe 0E94 0000 		call __fixsfsi
 1081               	.LVL53:
  29:noise.c       **** 	Y = floorY & 0xFF;
 1082               		.loc 1 29 4 view .LVU112
 1083 0502 DB01      		movw r26,r22
 1084 0504 BB27      		clr r27
 1085 0506 BA83      		std Y+2,r27
 1086 0508 A983      		std Y+1,r26
  32:noise.c       **** 	y -= floorY;
 1087               		.loc 1 32 4 view .LVU113
 1088 050a CB01      		movw r24,r22
 1089 050c 770F      		lsl r23
 1090 050e AA0B      		sbc r26,r26
 1091 0510 BB0B      		sbc r27,r27
 1092 0512 8D83      		std Y+5,r24
 1093 0514 9E83      		std Y+6,r25
 1094 0516 AF83      		std Y+7,r26
 1095 0518 B887      		std Y+8,r27
 1096 051a BC01      		movw r22,r24
 1097 051c CD01      		movw r24,r26
 1098 051e 0E94 0000 		call __floatsisf
 1099               	.LVL54:
 1100 0522 9B01      		movw r18,r22
 1101 0524 AC01      		movw r20,r24
 1102 0526 ED82      		std Y+5,r14
 1103 0528 FE82      		std Y+6,r15
 1104 052a 0F83      		std Y+7,r16
 1105 052c 1887      		std Y+8,r17
 1106 052e 6D81      		ldd r22,Y+5
 1107 0530 7E81      		ldd r23,Y+6
 1108 0532 8F81      		ldd r24,Y+7
 1109 0534 9885      		ldd r25,Y+8
 1110 0536 0E94 0000 		call __subsf3
 1111               	.LVL55:
 1112 053a 2B01      		movw r4,r22
 1113 053c 1C01      		movw r2,r24
 1114               	.LBB50:
 1115               	.LBB51:
  62:noise.c       **** }
 1116               		.loc 1 62 29 view .LVU114
 1117 053e 20E0      		ldi r18,0
 1118 0540 30E0      		ldi r19,0
 1119 0542 40EC      		ldi r20,lo8(-64)
 1120 0544 50E4      		ldi r21,lo8(64)
 1121 0546 6D83      		std Y+5,r22
 1122 0548 5E82      		std Y+6,r5
 1123 054a 8F83      		std Y+7,r24
 1124 054c 3886      		std Y+8,r3
 1125 054e 6D81      		ldd r22,Y+5
 1126 0550 7E81      		ldd r23,Y+6
 1127 0552 8F81      		ldd r24,Y+7
 1128 0554 9885      		ldd r25,Y+8
 1129 0556 0E94 0000 		call __mulsf3
 1130               	.LVL56:
  62:noise.c       **** }
 1131               		.loc 1 62 33 view .LVU115
 1132 055a 20E0      		ldi r18,0
 1133 055c 30E0      		ldi r19,0
 1134 055e 40E7      		ldi r20,lo8(112)
 1135 0560 51E4      		ldi r21,lo8(65)
 1136 0562 6D83      		std Y+5,r22
 1137 0564 7E83      		std Y+6,r23
 1138 0566 8F83      		std Y+7,r24
 1139 0568 9887      		std Y+8,r25
 1140 056a 6D81      		ldd r22,Y+5
 1141 056c 7E81      		ldd r23,Y+6
 1142 056e 8F81      		ldd r24,Y+7
 1143 0570 9885      		ldd r25,Y+8
 1144 0572 0E94 0000 		call __subsf3
 1145               	.LVL57:
  62:noise.c       **** }
 1146               		.loc 1 62 24 view .LVU116
 1147 0576 9201      		movw r18,r4
 1148 0578 A101      		movw r20,r2
 1149 057a 6D83      		std Y+5,r22
 1150 057c 7E83      		std Y+6,r23
 1151 057e 8F83      		std Y+7,r24
 1152 0580 9887      		std Y+8,r25
 1153 0582 6D81      		ldd r22,Y+5
 1154 0584 7E81      		ldd r23,Y+6
 1155 0586 8F81      		ldd r24,Y+7
 1156 0588 9885      		ldd r25,Y+8
 1157 058a 0E94 0000 		call __mulsf3
 1158               	.LVL58:
  62:noise.c       **** }
 1159               		.loc 1 62 39 view .LVU117
 1160 058e 20E0      		ldi r18,0
 1161 0590 30E0      		ldi r19,0
 1162 0592 40E2      		ldi r20,lo8(32)
 1163 0594 51E4      		ldi r21,lo8(65)
 1164 0596 6D83      		std Y+5,r22
 1165 0598 7E83      		std Y+6,r23
 1166 059a 8F83      		std Y+7,r24
 1167 059c 9887      		std Y+8,r25
 1168 059e 6D81      		ldd r22,Y+5
 1169 05a0 7E81      		ldd r23,Y+6
 1170 05a2 8F81      		ldd r24,Y+7
 1171 05a4 9885      		ldd r25,Y+8
 1172 05a6 0E94 0000 		call __addsf3
 1173               	.LVL59:
 1174 05aa 7B01      		movw r14,r22
 1175 05ac 8C01      		movw r16,r24
  62:noise.c       **** }
 1176               		.loc 1 62 11 view .LVU118
 1177 05ae 9201      		movw r18,r4
 1178 05b0 A101      		movw r20,r2
 1179 05b2 4D82      		std Y+5,r4
 1180 05b4 5E82      		std Y+6,r5
 1181 05b6 2F82      		std Y+7,r2
 1182 05b8 3886      		std Y+8,r3
 1183 05ba 6D81      		ldd r22,Y+5
 1184 05bc 7E81      		ldd r23,Y+6
 1185 05be 8F81      		ldd r24,Y+7
 1186 05c0 9885      		ldd r25,Y+8
 1187 05c2 0E94 0000 		call __mulsf3
 1188               	.LVL60:
  62:noise.c       **** }
 1189               		.loc 1 62 15 view .LVU119
 1190 05c6 9201      		movw r18,r4
 1191 05c8 A101      		movw r20,r2
 1192 05ca 6D83      		std Y+5,r22
 1193 05cc 7E83      		std Y+6,r23
 1194 05ce 8F83      		std Y+7,r24
 1195 05d0 9887      		std Y+8,r25
 1196 05d2 6D81      		ldd r22,Y+5
 1197 05d4 7E81      		ldd r23,Y+6
 1198 05d6 8F81      		ldd r24,Y+7
 1199 05d8 9885      		ldd r25,Y+8
 1200 05da 0E94 0000 		call __mulsf3
 1201               	.LVL61:
  62:noise.c       **** }
 1202               		.loc 1 62 19 view .LVU120
 1203 05de 9B01      		movw r18,r22
 1204 05e0 AC01      		movw r20,r24
 1205 05e2 ED82      		std Y+5,r14
 1206 05e4 FE82      		std Y+6,r15
 1207 05e6 0F83      		std Y+7,r16
 1208 05e8 1887      		std Y+8,r17
 1209 05ea 6D81      		ldd r22,Y+5
 1210 05ec 7E81      		ldd r23,Y+6
 1211 05ee 8F81      		ldd r24,Y+7
 1212 05f0 9885      		ldd r25,Y+8
 1213 05f2 0E94 0000 		call __mulsf3
 1214               	.LVL62:
 1215 05f6 6BA3      		std Y+35,r22
 1216 05f8 7CA3      		std Y+36,r23
 1217 05fa 8DA3      		std Y+37,r24
 1218 05fc 9EA3      		std Y+38,r25
 1219               	.LBE51:
 1220               	.LBE50:
  38:noise.c       **** 	AA = get(A) + Z;
 1221               		.loc 1 38 6 view .LVU121
 1222 05fe 8981      		ldd r24,Y+1
 1223 0600 9A81      		ldd r25,Y+2
 1224 0602 0E94 0000 		call get
 1225               	.LVL63:
 1226 0606 8DA7      		std Y+45,r24
 1227 0608 9EA7      		std Y+46,r25
  41:noise.c       **** 	BA = get(B) + Z;
 1228               		.loc 1 41 6 view .LVU122
 1229 060a 8981      		ldd r24,Y+1
 1230 060c 9A81      		ldd r25,Y+2
 1231 060e 0196      		adiw r24,1
 1232 0610 0E94 0000 		call get
 1233               	.LVL64:
 1234 0614 8FA7      		std Y+47,r24
 1235 0616 98AB      		std Y+48,r25
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1236               		.loc 1 44 9 view .LVU123
 1237 0618 20E0      		ldi r18,0
 1238 061a 30E0      		ldi r19,0
 1239 061c 40E8      		ldi r20,lo8(-128)
 1240 061e 5FE3      		ldi r21,lo8(63)
 1241 0620 4D82      		std Y+5,r4
 1242 0622 5E82      		std Y+6,r5
 1243 0624 2F82      		std Y+7,r2
 1244 0626 3886      		std Y+8,r3
 1245 0628 6D81      		ldd r22,Y+5
 1246 062a 7E81      		ldd r23,Y+6
 1247 062c 8F81      		ldd r24,Y+7
 1248 062e 9885      		ldd r25,Y+8
 1249 0630 0E94 0000 		call __subsf3
 1250               	.LVL65:
 1251 0634 6F8F      		std Y+31,r22
 1252 0636 78A3      		std Y+32,r23
 1253 0638 89A3      		std Y+33,r24
 1254 063a 9AA3      		std Y+34,r25
 1255 063c A7E3      		ldi r26,lo8(55)
 1256 063e B2E0      		ldi r27,lo8(2)
 1257 0640 2F89      		ldd r18,Y+23
 1258 0642 388D      		ldd r19,Y+24
 1259 0644 A21B      		sub r26,r18
 1260 0646 B30B      		sbc r27,r19
 1261 0648 BAAB      		std Y+50,r27
 1262 064a A9AB      		std Y+49,r26
 1263 064c 3CAB      		std Y+52,r19
 1264 064e 2BAB      		std Y+51,r18
 1265               	.LBE71:
 1266               	.LBE73:
 126:main.c        **** 		{
 1267               		.loc 2 126 9 view .LVU124
 1268 0650 1D82      		std Y+5,__zero_reg__
 1269               	.LVL66:
 1270               	.L50:
 1271               		.loc 2 128 4 is_stmt 1 discriminator 3 view .LVU125
 1272               		.loc 2 128 33 is_stmt 0 discriminator 3 view .LVU126
 1273 0652 9D81      		ldd r25,Y+5
 1274 0654 892F      		mov r24,r25
 1275 0656 90E0      		ldi r25,0
 1276 0658 B0E0      		ldi r27,0
 1277 065a A0E0      		ldi r26,0
 1278 065c 8983      		std Y+1,r24
 1279 065e 9A83      		std Y+2,r25
 1280 0660 AB83      		std Y+3,r26
 1281 0662 BC83      		std Y+4,r27
 1282 0664 BC01      		movw r22,r24
 1283 0666 CD01      		movw r24,r26
 1284 0668 0E94 0000 		call __floatunsisf
 1285               	.LVL67:
 1286               		.loc 2 128 8 discriminator 3 view .LVU127
 1287 066c 20E0      		ldi r18,0
 1288 066e 30E0      		ldi r19,0
 1289 0670 40E2      		ldi r20,lo8(32)
 1290 0672 51E4      		ldi r21,lo8(65)
 1291 0674 6983      		std Y+1,r22
 1292 0676 7A83      		std Y+2,r23
 1293 0678 8B83      		std Y+3,r24
 1294 067a 9C83      		std Y+4,r25
 1295 067c 6981      		ldd r22,Y+1
 1296 067e 7A81      		ldd r23,Y+2
 1297 0680 8B81      		ldd r24,Y+3
 1298 0682 9C81      		ldd r25,Y+4
 1299 0684 0E94 0000 		call __divsf3
 1300               	.LVL68:
 1301 0688 8B01      		movw r16,r22
 1302 068a 8A87      		std Y+10,r24
 1303 068c 9987      		std Y+9,r25
 1304               	.LVL69:
 1305               	.LBB74:
 1306               	.LBI45:
  22:noise.c       **** {
 1307               		.loc 1 22 15 is_stmt 1 discriminator 3 view .LVU128
 1308               	.LBB72:
  24:noise.c       **** 	double u, v, w;
 1309               		.loc 1 24 2 discriminator 3 view .LVU129
  25:noise.c       **** 	floorX = (int)x;
 1310               		.loc 1 25 2 discriminator 3 view .LVU130
  26:noise.c       **** 	floorY = (int)y;
 1311               		.loc 1 26 2 discriminator 3 view .LVU131
  27:noise.c       **** 	floorZ = (int)z;
 1312               		.loc 1 27 2 discriminator 3 view .LVU132
  27:noise.c       **** 	floorZ = (int)z;
 1313               		.loc 1 27 9 is_stmt 0 discriminator 3 view .LVU133
 1314 068e 6983      		std Y+1,r22
 1315 0690 1A83      		std Y+2,r17
 1316 0692 8B83      		std Y+3,r24
 1317 0694 9C83      		std Y+4,r25
 1318 0696 6981      		ldd r22,Y+1
 1319 0698 7A81      		ldd r23,Y+2
 1320 069a 8B81      		ldd r24,Y+3
 1321 069c 9C81      		ldd r25,Y+4
 1322               	.LVL70:
  27:noise.c       **** 	floorZ = (int)z;
 1323               		.loc 1 27 9 discriminator 3 view .LVU134
 1324 069e 0E94 0000 		call __fixsfsi
 1325               	.LVL71:
  28:noise.c       **** 	X = floorX & 0xFF;
 1326               		.loc 1 28 2 is_stmt 1 discriminator 3 view .LVU135
  29:noise.c       **** 	Y = floorY & 0xFF;
 1327               		.loc 1 29 2 discriminator 3 view .LVU136
  30:noise.c       **** 	Z = floorZ & 0xFF;
 1328               		.loc 1 30 2 discriminator 3 view .LVU137
  30:noise.c       **** 	Z = floorZ & 0xFF;
 1329               		.loc 1 30 4 is_stmt 0 discriminator 3 view .LVU138
 1330 06a2 7B01      		movw r14,r22
 1331 06a4 FF24      		clr r15
 1332               	.LVL72:
  31:noise.c       **** 	x -= floorX;
 1333               		.loc 1 31 2 is_stmt 1 discriminator 3 view .LVU139
  32:noise.c       **** 	y -= floorY;
 1334               		.loc 1 32 2 discriminator 3 view .LVU140
  33:noise.c       **** 	z -= floorZ;
 1335               		.loc 1 33 2 discriminator 3 view .LVU141
  33:noise.c       **** 	z -= floorZ;
 1336               		.loc 1 33 4 is_stmt 0 discriminator 3 view .LVU142
 1337 06a6 CB01      		movw r24,r22
 1338 06a8 770F      		lsl r23
 1339 06aa AA0B      		sbc r26,r26
 1340 06ac BB0B      		sbc r27,r27
 1341 06ae 8983      		std Y+1,r24
 1342 06b0 9A83      		std Y+2,r25
 1343 06b2 AB83      		std Y+3,r26
 1344 06b4 BC83      		std Y+4,r27
 1345               	.LVL73:
  33:noise.c       **** 	z -= floorZ;
 1346               		.loc 1 33 4 discriminator 3 view .LVU143
 1347 06b6 BC01      		movw r22,r24
 1348 06b8 CD01      		movw r24,r26
 1349 06ba 0E94 0000 		call __floatsisf
 1350               	.LVL74:
 1351 06be 9B01      		movw r18,r22
 1352 06c0 AC01      		movw r20,r24
 1353 06c2 0983      		std Y+1,r16
 1354 06c4 1A83      		std Y+2,r17
 1355 06c6 9A85      		ldd r25,Y+10
 1356 06c8 9B83      		std Y+3,r25
 1357 06ca A985      		ldd r26,Y+9
 1358 06cc AC83      		std Y+4,r26
 1359 06ce 6981      		ldd r22,Y+1
 1360 06d0 7A81      		ldd r23,Y+2
 1361 06d2 8B81      		ldd r24,Y+3
 1362 06d4 9C81      		ldd r25,Y+4
 1363 06d6 0E94 0000 		call __subsf3
 1364               	.LVL75:
 1365 06da 5B01      		movw r10,r22
 1366 06dc 2596      		adiw r28,68-63
 1367 06de 8FAF      		std Y+63,r24
 1368 06e0 2597      		sbiw r28,68-63
 1369 06e2 2496      		adiw r28,67-63
 1370 06e4 9FAF      		std Y+63,r25
 1371 06e6 2497      		sbiw r28,67-63
 1372               	.LVL76:
  34:noise.c       **** 	u = fade(x);
 1373               		.loc 1 34 2 is_stmt 1 discriminator 3 view .LVU144
  35:noise.c       **** 	v = fade(y);
 1374               		.loc 1 35 2 discriminator 3 view .LVU145
 1375               	.LBB53:
 1376               	.LBI50:
  60:noise.c       **** {
 1377               		.loc 1 60 15 discriminator 3 view .LVU146
 1378               	.LBB52:
  62:noise.c       **** }
 1379               		.loc 1 62 2 discriminator 3 view .LVU147
  62:noise.c       **** }
 1380               		.loc 1 62 2 is_stmt 0 discriminator 3 view .LVU148
 1381               	.LBE52:
 1382               	.LBE53:
  36:noise.c       **** 	w = fade(z);
 1383               		.loc 1 36 2 is_stmt 1 discriminator 3 view .LVU149
 1384               	.LBB54:
 1385               	.LBI54:
  60:noise.c       **** {
 1386               		.loc 1 60 15 discriminator 3 view .LVU150
 1387               	.LBB55:
  62:noise.c       **** }
 1388               		.loc 1 62 2 discriminator 3 view .LVU151
  62:noise.c       **** }
 1389               		.loc 1 62 29 is_stmt 0 discriminator 3 view .LVU152
 1390 06e8 20E0      		ldi r18,0
 1391 06ea 30E0      		ldi r19,0
 1392 06ec 40EC      		ldi r20,lo8(-64)
 1393 06ee 50E4      		ldi r21,lo8(64)
 1394 06f0 6983      		std Y+1,r22
 1395 06f2 BA82      		std Y+2,r11
 1396 06f4 8B83      		std Y+3,r24
 1397 06f6 9C83      		std Y+4,r25
 1398 06f8 6981      		ldd r22,Y+1
 1399 06fa 7A81      		ldd r23,Y+2
 1400 06fc 8B81      		ldd r24,Y+3
 1401 06fe 9C81      		ldd r25,Y+4
 1402               	.LVL77:
  62:noise.c       **** }
 1403               		.loc 1 62 29 discriminator 3 view .LVU153
 1404 0700 0E94 0000 		call __mulsf3
 1405               	.LVL78:
  62:noise.c       **** }
 1406               		.loc 1 62 33 discriminator 3 view .LVU154
 1407 0704 20E0      		ldi r18,0
 1408 0706 30E0      		ldi r19,0
 1409 0708 40E7      		ldi r20,lo8(112)
 1410 070a 51E4      		ldi r21,lo8(65)
 1411 070c 6983      		std Y+1,r22
 1412               	.LVL79:
  62:noise.c       **** }
 1413               		.loc 1 62 33 discriminator 3 view .LVU155
 1414 070e 7A83      		std Y+2,r23
 1415 0710 8B83      		std Y+3,r24
 1416 0712 9C83      		std Y+4,r25
 1417 0714 6981      		ldd r22,Y+1
 1418 0716 7A81      		ldd r23,Y+2
 1419 0718 8B81      		ldd r24,Y+3
 1420 071a 9C81      		ldd r25,Y+4
 1421 071c 0E94 0000 		call __subsf3
 1422               	.LVL80:
  62:noise.c       **** }
 1423               		.loc 1 62 24 discriminator 3 view .LVU156
 1424 0720 9501      		movw r18,r10
 1425 0722 2596      		adiw r28,68-63
 1426 0724 4FAD      		ldd r20,Y+63
 1427 0726 2597      		sbiw r28,68-63
 1428 0728 2496      		adiw r28,67-63
 1429 072a 5FAD      		ldd r21,Y+63
 1430 072c 2497      		sbiw r28,67-63
 1431 072e 6983      		std Y+1,r22
 1432 0730 7A83      		std Y+2,r23
 1433 0732 8B83      		std Y+3,r24
 1434 0734 9C83      		std Y+4,r25
 1435 0736 6981      		ldd r22,Y+1
 1436 0738 7A81      		ldd r23,Y+2
 1437 073a 8B81      		ldd r24,Y+3
 1438 073c 9C81      		ldd r25,Y+4
 1439 073e 0E94 0000 		call __mulsf3
 1440               	.LVL81:
  62:noise.c       **** }
 1441               		.loc 1 62 39 discriminator 3 view .LVU157
 1442 0742 20E0      		ldi r18,0
 1443 0744 30E0      		ldi r19,0
 1444 0746 40E2      		ldi r20,lo8(32)
 1445 0748 51E4      		ldi r21,lo8(65)
 1446 074a 6983      		std Y+1,r22
 1447 074c 7A83      		std Y+2,r23
 1448 074e 8B83      		std Y+3,r24
 1449 0750 9C83      		std Y+4,r25
 1450 0752 6981      		ldd r22,Y+1
 1451 0754 7A81      		ldd r23,Y+2
 1452 0756 8B81      		ldd r24,Y+3
 1453 0758 9C81      		ldd r25,Y+4
 1454 075a 0E94 0000 		call __addsf3
 1455               	.LVL82:
 1456 075e 6B01      		movw r12,r22
 1457 0760 8C01      		movw r16,r24
  62:noise.c       **** }
 1458               		.loc 1 62 11 discriminator 3 view .LVU158
 1459 0762 9501      		movw r18,r10
 1460 0764 2596      		adiw r28,68-63
 1461 0766 4FAD      		ldd r20,Y+63
 1462 0768 2597      		sbiw r28,68-63
 1463 076a 2496      		adiw r28,67-63
 1464 076c 5FAD      		ldd r21,Y+63
 1465 076e 2497      		sbiw r28,67-63
 1466 0770 A982      		std Y+1,r10
 1467 0772 BA82      		std Y+2,r11
 1468 0774 2596      		adiw r28,68-63
 1469 0776 BFAD      		ldd r27,Y+63
 1470 0778 2597      		sbiw r28,68-63
 1471 077a BB83      		std Y+3,r27
 1472 077c 2496      		adiw r28,67-63
 1473 077e 8FAD      		ldd r24,Y+63
 1474 0780 2497      		sbiw r28,67-63
 1475 0782 8C83      		std Y+4,r24
 1476 0784 6981      		ldd r22,Y+1
 1477 0786 7A81      		ldd r23,Y+2
 1478 0788 8B81      		ldd r24,Y+3
 1479 078a 9C81      		ldd r25,Y+4
 1480 078c 0E94 0000 		call __mulsf3
 1481               	.LVL83:
  62:noise.c       **** }
 1482               		.loc 1 62 15 discriminator 3 view .LVU159
 1483 0790 9501      		movw r18,r10
 1484 0792 2596      		adiw r28,68-63
 1485 0794 4FAD      		ldd r20,Y+63
 1486 0796 2597      		sbiw r28,68-63
 1487 0798 2496      		adiw r28,67-63
 1488 079a 5FAD      		ldd r21,Y+63
 1489 079c 2497      		sbiw r28,67-63
 1490 079e 6983      		std Y+1,r22
 1491 07a0 7A83      		std Y+2,r23
 1492 07a2 8B83      		std Y+3,r24
 1493 07a4 9C83      		std Y+4,r25
 1494 07a6 6981      		ldd r22,Y+1
 1495 07a8 7A81      		ldd r23,Y+2
 1496 07aa 8B81      		ldd r24,Y+3
 1497 07ac 9C81      		ldd r25,Y+4
 1498 07ae 0E94 0000 		call __mulsf3
 1499               	.LVL84:
  62:noise.c       **** }
 1500               		.loc 1 62 19 discriminator 3 view .LVU160
 1501 07b2 9B01      		movw r18,r22
 1502 07b4 AC01      		movw r20,r24
 1503 07b6 C982      		std Y+1,r12
 1504 07b8 DA82      		std Y+2,r13
 1505 07ba 0B83      		std Y+3,r16
 1506 07bc 1C83      		std Y+4,r17
 1507 07be 6981      		ldd r22,Y+1
 1508 07c0 7A81      		ldd r23,Y+2
 1509 07c2 8B81      		ldd r24,Y+3
 1510 07c4 9C81      		ldd r25,Y+4
 1511 07c6 0E94 0000 		call __mulsf3
 1512               	.LVL85:
 1513 07ca 6AAF      		std Y+58,r22
 1514 07cc 7BAF      		std Y+59,r23
 1515 07ce 8CAF      		std Y+60,r24
 1516 07d0 9DAF      		std Y+61,r25
 1517               	.LVL86:
  62:noise.c       **** }
 1518               		.loc 1 62 19 discriminator 3 view .LVU161
 1519               	.LBE55:
 1520               	.LBE54:
  37:noise.c       **** 	A = get(X) + Y;
 1521               		.loc 1 37 2 is_stmt 1 discriminator 3 view .LVU162
 1522               	.LBB56:
 1523               	.LBI47:
  60:noise.c       **** {
 1524               		.loc 1 60 15 discriminator 3 view .LVU163
 1525               	.LBB49:
  62:noise.c       **** }
 1526               		.loc 1 62 2 discriminator 3 view .LVU164
  62:noise.c       **** }
 1527               		.loc 1 62 2 is_stmt 0 discriminator 3 view .LVU165
 1528               	.LBE49:
 1529               	.LBE56:
  38:noise.c       **** 	AA = get(A) + Z;
 1530               		.loc 1 38 2 is_stmt 1 discriminator 3 view .LVU166
  38:noise.c       **** 	AA = get(A) + Z;
 1531               		.loc 1 38 4 is_stmt 0 discriminator 3 view .LVU167
 1532 07d2 0DA5      		ldd r16,Y+45
 1533 07d4 1EA5      		ldd r17,Y+46
 1534 07d6 0E0D      		add r16,r14
 1535 07d8 1F1D      		adc r17,r15
 1536               	.LVL87:
  39:noise.c       **** 	AB = get(A + 1) + Z;
 1537               		.loc 1 39 2 is_stmt 1 discriminator 3 view .LVU168
  39:noise.c       **** 	AB = get(A + 1) + Z;
 1538               		.loc 1 39 7 is_stmt 0 discriminator 3 view .LVU169
 1539 07da C801      		movw r24,r16
 1540               	.LVL88:
  39:noise.c       **** 	AB = get(A + 1) + Z;
 1541               		.loc 1 39 7 discriminator 3 view .LVU170
 1542 07dc 0E94 0000 		call get
 1543               	.LVL89:
  39:noise.c       **** 	AB = get(A + 1) + Z;
 1544               		.loc 1 39 5 discriminator 3 view .LVU171
 1545 07e0 AD89      		ldd r26,Y+21
 1546 07e2 BE89      		ldd r27,Y+22
 1547 07e4 A80F      		add r26,r24
 1548 07e6 B91F      		adc r27,r25
 1549 07e8 B8A7      		std Y+40,r27
 1550 07ea AFA3      		std Y+39,r26
 1551               	.LVL90:
  40:noise.c       **** 	B = get(X + 1) + Y;
 1552               		.loc 1 40 2 is_stmt 1 discriminator 3 view .LVU172
  40:noise.c       **** 	B = get(X + 1) + Y;
 1553               		.loc 1 40 7 is_stmt 0 discriminator 3 view .LVU173
 1554 07ec C801      		movw r24,r16
 1555 07ee 0196      		adiw r24,1
 1556 07f0 0E94 0000 		call get
 1557               	.LVL91:
  40:noise.c       **** 	B = get(X + 1) + Y;
 1558               		.loc 1 40 5 discriminator 3 view .LVU174
 1559 07f4 2D89      		ldd r18,Y+21
 1560 07f6 3E89      		ldd r19,Y+22
 1561 07f8 280F      		add r18,r24
 1562 07fa 391F      		adc r19,r25
 1563 07fc 388B      		std Y+16,r19
 1564 07fe 2F87      		std Y+15,r18
 1565               	.LVL92:
  41:noise.c       **** 	BA = get(B) + Z;
 1566               		.loc 1 41 2 is_stmt 1 discriminator 3 view .LVU175
  41:noise.c       **** 	BA = get(B) + Z;
 1567               		.loc 1 41 4 is_stmt 0 discriminator 3 view .LVU176
 1568 0800 8FA5      		ldd r24,Y+47
 1569 0802 98A9      		ldd r25,Y+48
 1570 0804 E80E      		add r14,r24
 1571 0806 F91E      		adc r15,r25
 1572               	.LVL93:
  42:noise.c       **** 	BB = get(B + 1) + Z;
 1573               		.loc 1 42 2 is_stmt 1 discriminator 3 view .LVU177
  42:noise.c       **** 	BB = get(B + 1) + Z;
 1574               		.loc 1 42 7 is_stmt 0 discriminator 3 view .LVU178
 1575 0808 C701      		movw r24,r14
 1576 080a 0E94 0000 		call get
 1577               	.LVL94:
  42:noise.c       **** 	BB = get(B + 1) + Z;
 1578               		.loc 1 42 5 discriminator 3 view .LVU179
 1579 080e AD89      		ldd r26,Y+21
 1580 0810 BE89      		ldd r27,Y+22
 1581 0812 A80F      		add r26,r24
 1582 0814 B91F      		adc r27,r25
 1583 0816 B9AF      		std Y+57,r27
 1584 0818 A8AF      		std Y+56,r26
 1585               	.LVL95:
  43:noise.c       **** 	return lerp(w, lerp(v, lerp(u,
 1586               		.loc 1 43 2 is_stmt 1 discriminator 3 view .LVU180
  43:noise.c       **** 	return lerp(w, lerp(v, lerp(u,
 1587               		.loc 1 43 7 is_stmt 0 discriminator 3 view .LVU181
 1588 081a C701      		movw r24,r14
 1589 081c 0196      		adiw r24,1
 1590 081e 0E94 0000 		call get
 1591               	.LVL96:
  43:noise.c       **** 	return lerp(w, lerp(v, lerp(u,
 1592               		.loc 1 43 5 discriminator 3 view .LVU182
 1593 0822 2D89      		ldd r18,Y+21
 1594 0824 3E89      		ldd r19,Y+22
 1595 0826 280F      		add r18,r24
 1596 0828 391F      		adc r19,r25
 1597 082a 3A8B      		std Y+18,r19
 1598 082c 298B      		std Y+17,r18
 1599               	.LVL97:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1600               		.loc 1 44 2 is_stmt 1 discriminator 3 view .LVU183
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1601               		.loc 1 44 9 is_stmt 0 discriminator 3 view .LVU184
 1602 082e 20E0      		ldi r18,0
 1603 0830 30E0      		ldi r19,0
 1604 0832 40E8      		ldi r20,lo8(-128)
 1605 0834 5FE3      		ldi r21,lo8(63)
 1606               	.LVL98:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1607               		.loc 1 44 9 discriminator 3 view .LVU185
 1608 0836 A982      		std Y+1,r10
 1609 0838 BA82      		std Y+2,r11
 1610 083a 2596      		adiw r28,68-63
 1611 083c 8FAD      		ldd r24,Y+63
 1612 083e 2597      		sbiw r28,68-63
 1613 0840 8B83      		std Y+3,r24
 1614 0842 2496      		adiw r28,67-63
 1615 0844 9FAD      		ldd r25,Y+63
 1616 0846 2497      		sbiw r28,67-63
 1617 0848 9C83      		std Y+4,r25
 1618 084a 6981      		ldd r22,Y+1
 1619 084c 7A81      		ldd r23,Y+2
 1620 084e 8B81      		ldd r24,Y+3
 1621 0850 9C81      		ldd r25,Y+4
 1622 0852 0E94 0000 		call __subsf3
 1623               	.LVL99:
 1624 0856 6987      		std Y+9,r22
 1625 0858 7A87      		std Y+10,r23
 1626 085a 8B87      		std Y+11,r24
 1627 085c 9C87      		std Y+12,r25
 1628 085e 8989      		ldd r24,Y+17
 1629 0860 9A89      		ldd r25,Y+18
 1630 0862 0196      		adiw r24,1
 1631 0864 0E94 0000 		call get
 1632               	.LVL100:
 1633 0868 CB8C      		ldd r12,Y+27
 1634 086a DC8C      		ldd r13,Y+28
 1635 086c ED8C      		ldd r14,Y+29
 1636               	.LVL101:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1637               		.loc 1 44 9 discriminator 3 view .LVU186
 1638 086e FE8C      		ldd r15,Y+30
 1639 0870 0985      		ldd r16,Y+9
 1640               	.LVL102:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1641               		.loc 1 44 9 discriminator 3 view .LVU187
 1642 0872 1A85      		ldd r17,Y+10
 1643 0874 2B85      		ldd r18,Y+11
 1644 0876 3C85      		ldd r19,Y+12
 1645 0878 4F8D      		ldd r20,Y+31
 1646 087a 58A1      		ldd r21,Y+32
 1647 087c 69A1      		ldd r22,Y+33
 1648 087e 7AA1      		ldd r23,Y+34
 1649 0880 0E94 0000 		call grad
 1650               	.LVL103:
 1651 0884 6D87      		std Y+13,r22
 1652 0886 7E87      		std Y+14,r23
 1653 0888 8B8B      		std Y+19,r24
 1654 088a 9C8B      		std Y+20,r25
 1655 088c 8F85      		ldd r24,Y+15
 1656 088e 9889      		ldd r25,Y+16
 1657 0890 0196      		adiw r24,1
 1658 0892 0E94 0000 		call get
 1659               	.LVL104:
 1660 0896 CB8C      		ldd r12,Y+27
 1661 0898 DC8C      		ldd r13,Y+28
 1662 089a ED8C      		ldd r14,Y+29
 1663 089c FE8C      		ldd r15,Y+30
 1664 089e 0985      		ldd r16,Y+9
 1665 08a0 1A85      		ldd r17,Y+10
 1666 08a2 2B85      		ldd r18,Y+11
 1667 08a4 3C85      		ldd r19,Y+12
 1668 08a6 A201      		movw r20,r4
 1669 08a8 B101      		movw r22,r2
 1670 08aa 0E94 0000 		call grad
 1671               	.LVL105:
 1672 08ae 7B01      		movw r14,r22
 1673 08b0 8C01      		movw r16,r24
 1674               	.LVL106:
 1675               	.LBB57:
 1676               	.LBI57:
  65:noise.c       **** {
 1677               		.loc 1 65 15 is_stmt 1 discriminator 3 view .LVU188
 1678               	.LBB58:
  67:noise.c       **** }
 1679               		.loc 1 67 2 discriminator 3 view .LVU189
  67:noise.c       **** }
 1680               		.loc 1 67 20 is_stmt 0 discriminator 3 view .LVU190
 1681 08b2 9B01      		movw r18,r22
 1682 08b4 AC01      		movw r20,r24
 1683 08b6 AD85      		ldd r26,Y+13
 1684 08b8 A983      		std Y+1,r26
 1685 08ba BE85      		ldd r27,Y+14
 1686 08bc BA83      		std Y+2,r27
 1687 08be 8B89      		ldd r24,Y+19
 1688               	.LVL107:
  67:noise.c       **** }
 1689               		.loc 1 67 20 discriminator 3 view .LVU191
 1690 08c0 8B83      		std Y+3,r24
 1691 08c2 9C89      		ldd r25,Y+20
 1692 08c4 9C83      		std Y+4,r25
 1693 08c6 6981      		ldd r22,Y+1
 1694 08c8 7A81      		ldd r23,Y+2
 1695 08ca 8B81      		ldd r24,Y+3
 1696 08cc 9C81      		ldd r25,Y+4
  67:noise.c       **** }
 1697               		.loc 1 67 20 discriminator 3 view .LVU192
 1698 08ce 0E94 0000 		call __subsf3
 1699               	.LVL108:
  67:noise.c       **** }
 1700               		.loc 1 67 15 discriminator 3 view .LVU193
 1701 08d2 2BA1      		ldd r18,Y+35
 1702 08d4 3CA1      		ldd r19,Y+36
 1703 08d6 4DA1      		ldd r20,Y+37
 1704 08d8 5EA1      		ldd r21,Y+38
 1705 08da 6983      		std Y+1,r22
 1706 08dc 7A83      		std Y+2,r23
 1707 08de 8B83      		std Y+3,r24
 1708 08e0 9C83      		std Y+4,r25
 1709 08e2 6981      		ldd r22,Y+1
 1710 08e4 7A81      		ldd r23,Y+2
 1711 08e6 8B81      		ldd r24,Y+3
 1712 08e8 9C81      		ldd r25,Y+4
 1713 08ea 0E94 0000 		call __mulsf3
 1714               	.LVL109:
  67:noise.c       **** }
 1715               		.loc 1 67 11 discriminator 3 view .LVU194
 1716 08ee 9701      		movw r18,r14
 1717 08f0 A801      		movw r20,r16
 1718 08f2 6983      		std Y+1,r22
 1719 08f4 7A83      		std Y+2,r23
 1720 08f6 8B83      		std Y+3,r24
 1721 08f8 9C83      		std Y+4,r25
 1722 08fa 6981      		ldd r22,Y+1
 1723 08fc 7A81      		ldd r23,Y+2
 1724 08fe 8B81      		ldd r24,Y+3
 1725 0900 9C81      		ldd r25,Y+4
 1726 0902 0E94 0000 		call __addsf3
 1727               	.LVL110:
 1728 0906 6DAB      		std Y+53,r22
 1729 0908 7EAB      		std Y+54,r23
 1730 090a 8FAB      		std Y+55,r24
 1731 090c 2396      		adiw r28,66-63
 1732 090e 9FAF      		std Y+63,r25
 1733 0910 2397      		sbiw r28,66-63
 1734               	.LVL111:
  67:noise.c       **** }
 1735               		.loc 1 67 11 discriminator 3 view .LVU195
 1736               	.LBE58:
 1737               	.LBE57:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1738               		.loc 1 44 9 discriminator 3 view .LVU196
 1739 0912 88AD      		ldd r24,Y+56
 1740 0914 99AD      		ldd r25,Y+57
 1741 0916 0196      		adiw r24,1
 1742 0918 0E94 0000 		call get
 1743               	.LVL112:
 1744 091c CB8C      		ldd r12,Y+27
 1745 091e DC8C      		ldd r13,Y+28
 1746 0920 ED8C      		ldd r14,Y+29
 1747 0922 FE8C      		ldd r15,Y+30
 1748 0924 8501      		movw r16,r10
 1749 0926 2596      		adiw r28,68-63
 1750 0928 2FAD      		ldd r18,Y+63
 1751 092a 2597      		sbiw r28,68-63
 1752 092c 2496      		adiw r28,67-63
 1753 092e 3FAD      		ldd r19,Y+63
 1754 0930 2497      		sbiw r28,67-63
 1755 0932 4F8D      		ldd r20,Y+31
 1756 0934 58A1      		ldd r21,Y+32
 1757 0936 69A1      		ldd r22,Y+33
 1758 0938 7AA1      		ldd r23,Y+34
 1759 093a 0E94 0000 		call grad
 1760               	.LVL113:
 1761 093e 6D87      		std Y+13,r22
 1762 0940 7E87      		std Y+14,r23
 1763 0942 8B8B      		std Y+19,r24
 1764 0944 9C8B      		std Y+20,r25
 1765 0946 8FA1      		ldd r24,Y+39
 1766 0948 98A5      		ldd r25,Y+40
 1767 094a 0196      		adiw r24,1
 1768 094c 0E94 0000 		call get
 1769               	.LVL114:
 1770 0950 CB8C      		ldd r12,Y+27
 1771 0952 DC8C      		ldd r13,Y+28
 1772 0954 ED8C      		ldd r14,Y+29
 1773 0956 FE8C      		ldd r15,Y+30
 1774 0958 2596      		adiw r28,68-63
 1775 095a 2FAD      		ldd r18,Y+63
 1776 095c 2597      		sbiw r28,68-63
 1777 095e 2496      		adiw r28,67-63
 1778 0960 3FAD      		ldd r19,Y+63
 1779 0962 2497      		sbiw r28,67-63
 1780 0964 A201      		movw r20,r4
 1781 0966 B101      		movw r22,r2
 1782 0968 0E94 0000 		call grad
 1783               	.LVL115:
 1784 096c 7B01      		movw r14,r22
 1785 096e 8C01      		movw r16,r24
 1786               	.LVL116:
 1787               	.LBB59:
 1788               	.LBI59:
  65:noise.c       **** {
 1789               		.loc 1 65 15 is_stmt 1 discriminator 3 view .LVU197
 1790               	.LBB60:
  67:noise.c       **** }
 1791               		.loc 1 67 2 discriminator 3 view .LVU198
  67:noise.c       **** }
 1792               		.loc 1 67 20 is_stmt 0 discriminator 3 view .LVU199
 1793 0970 9B01      		movw r18,r22
 1794 0972 AC01      		movw r20,r24
 1795 0974 AD85      		ldd r26,Y+13
 1796 0976 A983      		std Y+1,r26
 1797 0978 BE85      		ldd r27,Y+14
 1798 097a BA83      		std Y+2,r27
 1799 097c 8B89      		ldd r24,Y+19
 1800               	.LVL117:
  67:noise.c       **** }
 1801               		.loc 1 67 20 discriminator 3 view .LVU200
 1802 097e 8B83      		std Y+3,r24
 1803 0980 9C89      		ldd r25,Y+20
 1804 0982 9C83      		std Y+4,r25
 1805 0984 6981      		ldd r22,Y+1
 1806 0986 7A81      		ldd r23,Y+2
 1807 0988 8B81      		ldd r24,Y+3
 1808 098a 9C81      		ldd r25,Y+4
  67:noise.c       **** }
 1809               		.loc 1 67 20 discriminator 3 view .LVU201
 1810 098c 0E94 0000 		call __subsf3
 1811               	.LVL118:
  67:noise.c       **** }
 1812               		.loc 1 67 15 discriminator 3 view .LVU202
 1813 0990 2BA1      		ldd r18,Y+35
 1814 0992 3CA1      		ldd r19,Y+36
 1815 0994 4DA1      		ldd r20,Y+37
 1816 0996 5EA1      		ldd r21,Y+38
 1817 0998 6983      		std Y+1,r22
 1818 099a 7A83      		std Y+2,r23
 1819 099c 8B83      		std Y+3,r24
 1820 099e 9C83      		std Y+4,r25
 1821 09a0 6981      		ldd r22,Y+1
 1822 09a2 7A81      		ldd r23,Y+2
 1823 09a4 8B81      		ldd r24,Y+3
 1824 09a6 9C81      		ldd r25,Y+4
 1825 09a8 0E94 0000 		call __mulsf3
 1826               	.LVL119:
  67:noise.c       **** }
 1827               		.loc 1 67 11 discriminator 3 view .LVU203
 1828 09ac 9701      		movw r18,r14
 1829 09ae A801      		movw r20,r16
 1830 09b0 6983      		std Y+1,r22
 1831 09b2 7A83      		std Y+2,r23
 1832 09b4 8B83      		std Y+3,r24
 1833 09b6 9C83      		std Y+4,r25
 1834 09b8 6981      		ldd r22,Y+1
 1835 09ba 7A81      		ldd r23,Y+2
 1836 09bc 8B81      		ldd r24,Y+3
 1837 09be 9C81      		ldd r25,Y+4
 1838 09c0 0E94 0000 		call __addsf3
 1839               	.LVL120:
 1840 09c4 7B01      		movw r14,r22
 1841 09c6 8C01      		movw r16,r24
 1842               	.LVL121:
  67:noise.c       **** }
 1843               		.loc 1 67 11 discriminator 3 view .LVU204
 1844               	.LBE60:
 1845               	.LBE59:
 1846               	.LBB61:
 1847               	.LBI61:
  65:noise.c       **** {
 1848               		.loc 1 65 15 is_stmt 1 discriminator 3 view .LVU205
 1849               	.LBB62:
  67:noise.c       **** }
 1850               		.loc 1 67 2 discriminator 3 view .LVU206
  67:noise.c       **** }
 1851               		.loc 1 67 20 is_stmt 0 discriminator 3 view .LVU207
 1852 09c8 9B01      		movw r18,r22
 1853 09ca AC01      		movw r20,r24
 1854 09cc ADA9      		ldd r26,Y+53
 1855 09ce A983      		std Y+1,r26
 1856 09d0 BEA9      		ldd r27,Y+54
 1857 09d2 BA83      		std Y+2,r27
 1858 09d4 8FA9      		ldd r24,Y+55
 1859               	.LVL122:
  67:noise.c       **** }
 1860               		.loc 1 67 20 discriminator 3 view .LVU208
 1861 09d6 8B83      		std Y+3,r24
 1862 09d8 2396      		adiw r28,66-63
 1863 09da 9FAD      		ldd r25,Y+63
 1864 09dc 2397      		sbiw r28,66-63
 1865 09de 9C83      		std Y+4,r25
 1866 09e0 6981      		ldd r22,Y+1
 1867 09e2 7A81      		ldd r23,Y+2
 1868 09e4 8B81      		ldd r24,Y+3
 1869 09e6 9C81      		ldd r25,Y+4
  67:noise.c       **** }
 1870               		.loc 1 67 20 discriminator 3 view .LVU209
 1871 09e8 0E94 0000 		call __subsf3
 1872               	.LVL123:
  67:noise.c       **** }
 1873               		.loc 1 67 15 discriminator 3 view .LVU210
 1874 09ec 2AAD      		ldd r18,Y+58
 1875 09ee 3BAD      		ldd r19,Y+59
 1876 09f0 4CAD      		ldd r20,Y+60
 1877 09f2 5DAD      		ldd r21,Y+61
 1878 09f4 6983      		std Y+1,r22
 1879 09f6 7A83      		std Y+2,r23
 1880 09f8 8B83      		std Y+3,r24
 1881 09fa 9C83      		std Y+4,r25
 1882 09fc 6981      		ldd r22,Y+1
 1883 09fe 7A81      		ldd r23,Y+2
 1884 0a00 8B81      		ldd r24,Y+3
 1885 0a02 9C81      		ldd r25,Y+4
 1886 0a04 0E94 0000 		call __mulsf3
 1887               	.LVL124:
  67:noise.c       **** }
 1888               		.loc 1 67 11 discriminator 3 view .LVU211
 1889 0a08 9701      		movw r18,r14
 1890 0a0a A801      		movw r20,r16
 1891 0a0c 6983      		std Y+1,r22
 1892 0a0e 7A83      		std Y+2,r23
 1893 0a10 8B83      		std Y+3,r24
 1894 0a12 9C83      		std Y+4,r25
 1895 0a14 6981      		ldd r22,Y+1
 1896 0a16 7A81      		ldd r23,Y+2
 1897 0a18 8B81      		ldd r24,Y+3
 1898 0a1a 9C81      		ldd r25,Y+4
 1899 0a1c 0E94 0000 		call __addsf3
 1900               	.LVL125:
 1901 0a20 6C8B      		std Y+20,r22
 1902 0a22 7DAB      		std Y+53,r23
 1903               	.LVL126:
  67:noise.c       **** }
 1904               		.loc 1 67 11 discriminator 3 view .LVU212
 1905 0a24 8EAB      		std Y+54,r24
 1906 0a26 9FAB      		std Y+55,r25
 1907               	.LVL127:
  67:noise.c       **** }
 1908               		.loc 1 67 11 discriminator 3 view .LVU213
 1909               	.LBE62:
 1910               	.LBE61:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1911               		.loc 1 44 9 discriminator 3 view .LVU214
 1912 0a28 8989      		ldd r24,Y+17
 1913 0a2a 9A89      		ldd r25,Y+18
 1914 0a2c 0E94 0000 		call get
 1915               	.LVL128:
 1916 0a30 C92C      		mov r12,r9
 1917 0a32 D82C      		mov r13,r8
 1918 0a34 E72C      		mov r14,r7
 1919 0a36 F62C      		mov r15,r6
 1920 0a38 0985      		ldd r16,Y+9
 1921 0a3a 1A85      		ldd r17,Y+10
 1922 0a3c 2B85      		ldd r18,Y+11
 1923 0a3e 3C85      		ldd r19,Y+12
 1924 0a40 4F8D      		ldd r20,Y+31
 1925 0a42 58A1      		ldd r21,Y+32
 1926 0a44 69A1      		ldd r22,Y+33
 1927 0a46 7AA1      		ldd r23,Y+34
 1928 0a48 0E94 0000 		call grad
 1929               	.LVL129:
 1930 0a4c 698B      		std Y+17,r22
 1931               	.LVL130:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 1932               		.loc 1 44 9 discriminator 3 view .LVU215
 1933 0a4e 7D87      		std Y+13,r23
 1934 0a50 8E87      		std Y+14,r24
 1935 0a52 9B8B      		std Y+19,r25
 1936 0a54 8F85      		ldd r24,Y+15
 1937 0a56 9889      		ldd r25,Y+16
 1938 0a58 0E94 0000 		call get
 1939               	.LVL131:
 1940 0a5c 0985      		ldd r16,Y+9
 1941 0a5e 1A85      		ldd r17,Y+10
 1942 0a60 2B85      		ldd r18,Y+11
 1943 0a62 3C85      		ldd r19,Y+12
 1944 0a64 A201      		movw r20,r4
 1945 0a66 B101      		movw r22,r2
 1946 0a68 0E94 0000 		call grad
 1947               	.LVL132:
 1948 0a6c 7B01      		movw r14,r22
 1949 0a6e 8C01      		movw r16,r24
 1950               	.LVL133:
 1951               	.LBB63:
 1952               	.LBI63:
  65:noise.c       **** {
 1953               		.loc 1 65 15 is_stmt 1 discriminator 3 view .LVU216
 1954               	.LBB64:
  67:noise.c       **** }
 1955               		.loc 1 67 2 discriminator 3 view .LVU217
  67:noise.c       **** }
 1956               		.loc 1 67 20 is_stmt 0 discriminator 3 view .LVU218
 1957 0a70 9B01      		movw r18,r22
 1958 0a72 AC01      		movw r20,r24
 1959 0a74 A989      		ldd r26,Y+17
 1960 0a76 A983      		std Y+1,r26
 1961 0a78 BD85      		ldd r27,Y+13
 1962 0a7a BA83      		std Y+2,r27
 1963 0a7c 8E85      		ldd r24,Y+14
 1964               	.LVL134:
  67:noise.c       **** }
 1965               		.loc 1 67 20 discriminator 3 view .LVU219
 1966 0a7e 8B83      		std Y+3,r24
 1967 0a80 9B89      		ldd r25,Y+19
 1968 0a82 9C83      		std Y+4,r25
 1969 0a84 6981      		ldd r22,Y+1
 1970 0a86 7A81      		ldd r23,Y+2
 1971 0a88 8B81      		ldd r24,Y+3
 1972 0a8a 9C81      		ldd r25,Y+4
  67:noise.c       **** }
 1973               		.loc 1 67 20 discriminator 3 view .LVU220
 1974 0a8c 0E94 0000 		call __subsf3
 1975               	.LVL135:
  67:noise.c       **** }
 1976               		.loc 1 67 15 discriminator 3 view .LVU221
 1977 0a90 2BA1      		ldd r18,Y+35
 1978 0a92 3CA1      		ldd r19,Y+36
 1979 0a94 4DA1      		ldd r20,Y+37
 1980 0a96 5EA1      		ldd r21,Y+38
 1981 0a98 6983      		std Y+1,r22
 1982 0a9a 7A83      		std Y+2,r23
 1983 0a9c 8B83      		std Y+3,r24
 1984 0a9e 9C83      		std Y+4,r25
 1985 0aa0 6981      		ldd r22,Y+1
 1986 0aa2 7A81      		ldd r23,Y+2
 1987 0aa4 8B81      		ldd r24,Y+3
 1988 0aa6 9C81      		ldd r25,Y+4
 1989 0aa8 0E94 0000 		call __mulsf3
 1990               	.LVL136:
  67:noise.c       **** }
 1991               		.loc 1 67 11 discriminator 3 view .LVU222
 1992 0aac 9701      		movw r18,r14
 1993 0aae A801      		movw r20,r16
 1994 0ab0 6983      		std Y+1,r22
 1995 0ab2 7A83      		std Y+2,r23
 1996 0ab4 8B83      		std Y+3,r24
 1997 0ab6 9C83      		std Y+4,r25
 1998 0ab8 6981      		ldd r22,Y+1
 1999 0aba 7A81      		ldd r23,Y+2
 2000 0abc 8B81      		ldd r24,Y+3
 2001 0abe 9C81      		ldd r25,Y+4
 2002 0ac0 0E94 0000 		call __addsf3
 2003               	.LVL137:
 2004 0ac4 6F87      		std Y+15,r22
 2005               	.LVL138:
  67:noise.c       **** }
 2006               		.loc 1 67 11 discriminator 3 view .LVU223
 2007 0ac6 798B      		std Y+17,r23
 2008               	.LVL139:
  67:noise.c       **** }
 2009               		.loc 1 67 11 discriminator 3 view .LVU224
 2010 0ac8 8D87      		std Y+13,r24
 2011 0aca 9E87      		std Y+14,r25
 2012               	.LVL140:
  67:noise.c       **** }
 2013               		.loc 1 67 11 discriminator 3 view .LVU225
 2014               	.LBE64:
 2015               	.LBE63:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 2016               		.loc 1 44 9 discriminator 3 view .LVU226
 2017 0acc 88AD      		ldd r24,Y+56
 2018 0ace 99AD      		ldd r25,Y+57
 2019 0ad0 0E94 0000 		call get
 2020               	.LVL141:
 2021 0ad4 E72C      		mov r14,r7
 2022 0ad6 F62C      		mov r15,r6
 2023 0ad8 8501      		movw r16,r10
 2024 0ada 2596      		adiw r28,68-63
 2025 0adc 2FAD      		ldd r18,Y+63
 2026 0ade 2597      		sbiw r28,68-63
 2027 0ae0 2496      		adiw r28,67-63
 2028 0ae2 3FAD      		ldd r19,Y+63
 2029 0ae4 2497      		sbiw r28,67-63
 2030 0ae6 4F8D      		ldd r20,Y+31
 2031 0ae8 58A1      		ldd r21,Y+32
 2032 0aea 69A1      		ldd r22,Y+33
 2033 0aec 7AA1      		ldd r23,Y+34
 2034 0aee 0E94 0000 		call grad
 2035               	.LVL142:
 2036 0af2 6987      		std Y+9,r22
 2037 0af4 7A87      		std Y+10,r23
 2038 0af6 8B87      		std Y+11,r24
 2039 0af8 9C87      		std Y+12,r25
 2040 0afa 8FA1      		ldd r24,Y+39
 2041 0afc 98A5      		ldd r25,Y+40
 2042 0afe 0E94 0000 		call get
 2043               	.LVL143:
 2044 0b02 2596      		adiw r28,68-63
 2045 0b04 2FAD      		ldd r18,Y+63
 2046 0b06 2597      		sbiw r28,68-63
 2047 0b08 2496      		adiw r28,67-63
 2048 0b0a 3FAD      		ldd r19,Y+63
 2049 0b0c 2497      		sbiw r28,67-63
 2050 0b0e A201      		movw r20,r4
 2051 0b10 B101      		movw r22,r2
 2052 0b12 0E94 0000 		call grad
 2053               	.LVL144:
 2054 0b16 8B01      		movw r16,r22
 2055 0b18 8FA3      		std Y+39,r24
 2056               	.LVL145:
  44:noise.c       **** 		grad(get(AA), x, y, z),
 2057               		.loc 1 44 9 discriminator 3 view .LVU227
 2058 0b1a 9B8B      		std Y+19,r25
 2059               	.LVL146:
 2060               	.LBB65:
 2061               	.LBI65:
  65:noise.c       **** {
 2062               		.loc 1 65 15 is_stmt 1 discriminator 3 view .LVU228
 2063               	.LBB66:
  67:noise.c       **** }
 2064               		.loc 1 67 2 discriminator 3 view .LVU229
  67:noise.c       **** }
 2065               		.loc 1 67 20 is_stmt 0 discriminator 3 view .LVU230
 2066 0b1c 9B01      		movw r18,r22
 2067 0b1e AC01      		movw r20,r24
 2068 0b20 A985      		ldd r26,Y+9
 2069 0b22 A983      		std Y+1,r26
 2070 0b24 BA85      		ldd r27,Y+10
 2071 0b26 BA83      		std Y+2,r27
 2072 0b28 8B85      		ldd r24,Y+11
 2073               	.LVL147:
  67:noise.c       **** }
 2074               		.loc 1 67 20 discriminator 3 view .LVU231
 2075 0b2a 8B83      		std Y+3,r24
 2076 0b2c 9C85      		ldd r25,Y+12
 2077               	.LVL148:
  67:noise.c       **** }
 2078               		.loc 1 67 20 discriminator 3 view .LVU232
 2079 0b2e 9C83      		std Y+4,r25
 2080 0b30 6981      		ldd r22,Y+1
 2081 0b32 7A81      		ldd r23,Y+2
 2082 0b34 8B81      		ldd r24,Y+3
 2083 0b36 9C81      		ldd r25,Y+4
 2084               	.LVL149:
  67:noise.c       **** }
 2085               		.loc 1 67 20 discriminator 3 view .LVU233
 2086 0b38 0E94 0000 		call __subsf3
 2087               	.LVL150:
  67:noise.c       **** }
 2088               		.loc 1 67 15 discriminator 3 view .LVU234
 2089 0b3c 2BA1      		ldd r18,Y+35
 2090 0b3e 3CA1      		ldd r19,Y+36
 2091 0b40 4DA1      		ldd r20,Y+37
 2092 0b42 5EA1      		ldd r21,Y+38
 2093 0b44 6983      		std Y+1,r22
 2094 0b46 7A83      		std Y+2,r23
 2095 0b48 8B83      		std Y+3,r24
 2096 0b4a 9C83      		std Y+4,r25
 2097 0b4c 6981      		ldd r22,Y+1
 2098 0b4e 7A81      		ldd r23,Y+2
 2099 0b50 8B81      		ldd r24,Y+3
 2100 0b52 9C81      		ldd r25,Y+4
 2101 0b54 0E94 0000 		call __mulsf3
 2102               	.LVL151:
  67:noise.c       **** }
 2103               		.loc 1 67 11 discriminator 3 view .LVU235
 2104 0b58 9801      		movw r18,r16
 2105 0b5a 4FA1      		ldd r20,Y+39
 2106 0b5c 5B89      		ldd r21,Y+19
 2107 0b5e 6983      		std Y+1,r22
 2108 0b60 7A83      		std Y+2,r23
 2109 0b62 8B83      		std Y+3,r24
 2110 0b64 9C83      		std Y+4,r25
 2111 0b66 6981      		ldd r22,Y+1
 2112 0b68 7A81      		ldd r23,Y+2
 2113 0b6a 8B81      		ldd r24,Y+3
 2114 0b6c 9C81      		ldd r25,Y+4
 2115 0b6e 0E94 0000 		call __addsf3
 2116               	.LVL152:
 2117 0b72 8B01      		movw r16,r22
 2118 0b74 8A87      		std Y+10,r24
 2119               	.LVL153:
  67:noise.c       **** }
 2120               		.loc 1 67 11 discriminator 3 view .LVU236
 2121 0b76 9987      		std Y+9,r25
 2122               	.LVL154:
  67:noise.c       **** }
 2123               		.loc 1 67 11 discriminator 3 view .LVU237
 2124               	.LBE66:
 2125               	.LBE65:
 2126               	.LBB67:
 2127               	.LBI67:
  65:noise.c       **** {
 2128               		.loc 1 65 15 is_stmt 1 discriminator 3 view .LVU238
 2129               	.LBB68:
  67:noise.c       **** }
 2130               		.loc 1 67 2 discriminator 3 view .LVU239
  67:noise.c       **** }
 2131               		.loc 1 67 20 is_stmt 0 discriminator 3 view .LVU240
 2132 0b78 9B01      		movw r18,r22
 2133 0b7a AC01      		movw r20,r24
 2134 0b7c AF85      		ldd r26,Y+15
 2135 0b7e A983      		std Y+1,r26
 2136 0b80 B989      		ldd r27,Y+17
 2137 0b82 BA83      		std Y+2,r27
 2138 0b84 8D85      		ldd r24,Y+13
 2139               	.LVL155:
  67:noise.c       **** }
 2140               		.loc 1 67 20 discriminator 3 view .LVU241
 2141 0b86 8B83      		std Y+3,r24
 2142 0b88 9E85      		ldd r25,Y+14
 2143               	.LVL156:
  67:noise.c       **** }
 2144               		.loc 1 67 20 discriminator 3 view .LVU242
 2145 0b8a 9C83      		std Y+4,r25
 2146 0b8c 6981      		ldd r22,Y+1
 2147 0b8e 7A81      		ldd r23,Y+2
 2148 0b90 8B81      		ldd r24,Y+3
 2149 0b92 9C81      		ldd r25,Y+4
 2150               	.LVL157:
  67:noise.c       **** }
 2151               		.loc 1 67 20 discriminator 3 view .LVU243
 2152 0b94 0E94 0000 		call __subsf3
 2153               	.LVL158:
  67:noise.c       **** }
 2154               		.loc 1 67 15 discriminator 3 view .LVU244
 2155 0b98 2AAD      		ldd r18,Y+58
 2156 0b9a 3BAD      		ldd r19,Y+59
 2157 0b9c 4CAD      		ldd r20,Y+60
 2158 0b9e 5DAD      		ldd r21,Y+61
 2159 0ba0 6983      		std Y+1,r22
 2160 0ba2 7A83      		std Y+2,r23
 2161 0ba4 8B83      		std Y+3,r24
 2162 0ba6 9C83      		std Y+4,r25
 2163 0ba8 6981      		ldd r22,Y+1
 2164 0baa 7A81      		ldd r23,Y+2
 2165 0bac 8B81      		ldd r24,Y+3
 2166 0bae 9C81      		ldd r25,Y+4
 2167 0bb0 0E94 0000 		call __mulsf3
 2168               	.LVL159:
  67:noise.c       **** }
 2169               		.loc 1 67 11 discriminator 3 view .LVU245
 2170 0bb4 9801      		movw r18,r16
 2171 0bb6 4A85      		ldd r20,Y+10
 2172 0bb8 5985      		ldd r21,Y+9
 2173 0bba 6983      		std Y+1,r22
 2174 0bbc 7A83      		std Y+2,r23
 2175 0bbe 8B83      		std Y+3,r24
 2176 0bc0 9C83      		std Y+4,r25
 2177 0bc2 6981      		ldd r22,Y+1
 2178 0bc4 7A81      		ldd r23,Y+2
 2179 0bc6 8B81      		ldd r24,Y+3
 2180 0bc8 9C81      		ldd r25,Y+4
 2181 0bca 0E94 0000 		call __addsf3
 2182               	.LVL160:
 2183 0bce 8B01      		movw r16,r22
 2184 0bd0 8A87      		std Y+10,r24
 2185 0bd2 9987      		std Y+9,r25
 2186               	.LVL161:
  67:noise.c       **** }
 2187               		.loc 1 67 11 discriminator 3 view .LVU246
 2188               	.LBE68:
 2189               	.LBE67:
 2190               	.LBB69:
 2191               	.LBI69:
  65:noise.c       **** {
 2192               		.loc 1 65 15 is_stmt 1 discriminator 3 view .LVU247
 2193               	.LBB70:
  67:noise.c       **** }
 2194               		.loc 1 67 2 discriminator 3 view .LVU248
  67:noise.c       **** }
 2195               		.loc 1 67 20 is_stmt 0 discriminator 3 view .LVU249
 2196 0bd4 9B01      		movw r18,r22
 2197 0bd6 AC01      		movw r20,r24
 2198 0bd8 AC89      		ldd r26,Y+20
 2199 0bda A983      		std Y+1,r26
 2200 0bdc BDA9      		ldd r27,Y+53
 2201 0bde BA83      		std Y+2,r27
 2202 0be0 8EA9      		ldd r24,Y+54
 2203               	.LVL162:
  67:noise.c       **** }
 2204               		.loc 1 67 20 discriminator 3 view .LVU250
 2205 0be2 8B83      		std Y+3,r24
 2206 0be4 9FA9      		ldd r25,Y+55
 2207               	.LVL163:
  67:noise.c       **** }
 2208               		.loc 1 67 20 discriminator 3 view .LVU251
 2209 0be6 9C83      		std Y+4,r25
 2210 0be8 6981      		ldd r22,Y+1
 2211 0bea 7A81      		ldd r23,Y+2
 2212 0bec 8B81      		ldd r24,Y+3
 2213 0bee 9C81      		ldd r25,Y+4
 2214               	.LVL164:
  67:noise.c       **** }
 2215               		.loc 1 67 20 discriminator 3 view .LVU252
 2216 0bf0 0E94 0000 		call __subsf3
 2217               	.LVL165:
  67:noise.c       **** }
 2218               		.loc 1 67 15 discriminator 3 view .LVU253
 2219 0bf4 2EAD      		ldd r18,Y+62
 2220 0bf6 3FAD      		ldd r19,Y+63
 2221 0bf8 2196      		adiw r28,64-63
 2222 0bfa 4FAD      		ldd r20,Y+63
 2223 0bfc 2197      		sbiw r28,64-63
 2224 0bfe 2296      		adiw r28,65-63
 2225 0c00 5FAD      		ldd r21,Y+63
 2226 0c02 2297      		sbiw r28,65-63
 2227 0c04 6983      		std Y+1,r22
 2228 0c06 7A83      		std Y+2,r23
 2229 0c08 8B83      		std Y+3,r24
 2230 0c0a 9C83      		std Y+4,r25
 2231 0c0c 6981      		ldd r22,Y+1
 2232 0c0e 7A81      		ldd r23,Y+2
 2233 0c10 8B81      		ldd r24,Y+3
 2234 0c12 9C81      		ldd r25,Y+4
 2235 0c14 0E94 0000 		call __mulsf3
 2236               	.LVL166:
  67:noise.c       **** }
 2237               		.loc 1 67 11 discriminator 3 view .LVU254
 2238 0c18 9801      		movw r18,r16
 2239 0c1a 4A85      		ldd r20,Y+10
 2240 0c1c 5985      		ldd r21,Y+9
 2241 0c1e 6983      		std Y+1,r22
 2242 0c20 7A83      		std Y+2,r23
 2243 0c22 8B83      		std Y+3,r24
 2244 0c24 9C83      		std Y+4,r25
 2245 0c26 6981      		ldd r22,Y+1
 2246 0c28 7A81      		ldd r23,Y+2
 2247 0c2a 8B81      		ldd r24,Y+3
 2248 0c2c 9C81      		ldd r25,Y+4
 2249 0c2e 0E94 0000 		call __addsf3
 2250               	.LVL167:
 2251 0c32 5B01      		movw r10,r22
 2252 0c34 8E87      		std Y+14,r24
 2253 0c36 9D87      		std Y+13,r25
 2254               	.LVL168:
  67:noise.c       **** }
 2255               		.loc 1 67 11 discriminator 3 view .LVU255
 2256               	.LBE70:
 2257               	.LBE69:
 2258               	.LBE72:
 2259               	.LBE74:
 129:main.c        **** 			hsl_to_rgb(v, 1, 0.5, &c);
 2260               		.loc 2 129 4 is_stmt 1 discriminator 3 view .LVU256
 2261               	.LBB75:
 2262               	.LBI75:
  42:main.c        **** {
 2263               		.loc 2 42 13 discriminator 3 view .LVU257
 2264               	.LBB76:
  44:main.c        **** 	if(l != 0)
 2265               		.loc 2 44 2 discriminator 3 view .LVU258
  45:main.c        **** 	{
 2266               		.loc 2 45 2 discriminator 3 view .LVU259
  47:main.c        **** 		{
 2267               		.loc 2 47 3 discriminator 3 view .LVU260
  53:main.c        **** 			{
 2268               		.loc 2 53 4 discriminator 3 view .LVU261
  59:main.c        **** 			}
 2269               		.loc 2 59 5 discriminator 3 view .LVU262
  62:main.c        **** 			tR = color_component(temp1, temp2, h + 1.0 / 3.0);
 2270               		.loc 2 62 4 discriminator 3 view .LVU263
  63:main.c        **** 			tG = color_component(temp1, temp2, h);
 2271               		.loc 2 63 4 discriminator 3 view .LVU264
  63:main.c        **** 			tG = color_component(temp1, temp2, h);
 2272               		.loc 2 63 9 is_stmt 0 discriminator 3 view .LVU265
 2273 0c38 2BEA      		ldi r18,lo8(-85)
 2274 0c3a 3AEA      		ldi r19,lo8(-86)
 2275 0c3c 4AEA      		ldi r20,lo8(-86)
 2276 0c3e 5EE3      		ldi r21,lo8(62)
 2277 0c40 6983      		std Y+1,r22
 2278 0c42 BA82      		std Y+2,r11
 2279 0c44 8B83      		std Y+3,r24
 2280 0c46 9C83      		std Y+4,r25
 2281 0c48 6981      		ldd r22,Y+1
 2282 0c4a 7A81      		ldd r23,Y+2
 2283 0c4c 8B81      		ldd r24,Y+3
 2284 0c4e 9C81      		ldd r25,Y+4
 2285               	.LVL169:
  63:main.c        **** 			tG = color_component(temp1, temp2, h);
 2286               		.loc 2 63 9 discriminator 3 view .LVU266
 2287 0c50 0E94 0000 		call __addsf3
 2288               	.LVL170:
  63:main.c        **** 			tG = color_component(temp1, temp2, h);
 2289               		.loc 2 63 9 discriminator 3 view .LVU267
 2290 0c54 6983      		std Y+1,r22
 2291               	.LVL171:
  63:main.c        **** 			tG = color_component(temp1, temp2, h);
 2292               		.loc 2 63 9 discriminator 3 view .LVU268
 2293 0c56 7A83      		std Y+2,r23
 2294 0c58 8B83      		std Y+3,r24
 2295 0c5a 9C83      		std Y+4,r25
 2296 0c5c E980      		ldd r14,Y+1
 2297 0c5e FA80      		ldd r15,Y+2
 2298 0c60 0B81      		ldd r16,Y+3
 2299 0c62 1C81      		ldd r17,Y+4
 2300 0c64 20E0      		ldi r18,0
 2301 0c66 30E0      		ldi r19,0
 2302 0c68 40E8      		ldi r20,lo8(-128)
 2303 0c6a 5FE3      		ldi r21,lo8(63)
 2304 0c6c 60E0      		ldi r22,0
 2305 0c6e 70E0      		ldi r23,0
 2306 0c70 CB01      		movw r24,r22
 2307 0c72 0E94 0000 		call color_component
 2308               	.LVL172:
 2309 0c76 6987      		std Y+9,r22
 2310 0c78 7A87      		std Y+10,r23
 2311 0c7a 8B87      		std Y+11,r24
 2312 0c7c 9C87      		std Y+12,r25
 2313               	.LVL173:
  64:main.c        **** 			tB = color_component(temp1, temp2, h - 1.0 / 3.0);
 2314               		.loc 2 64 4 is_stmt 1 discriminator 3 view .LVU269
  64:main.c        **** 			tB = color_component(temp1, temp2, h - 1.0 / 3.0);
 2315               		.loc 2 64 9 is_stmt 0 discriminator 3 view .LVU270
 2316 0c7e A982      		std Y+1,r10
 2317 0c80 BA82      		std Y+2,r11
 2318 0c82 AE85      		ldd r26,Y+14
 2319 0c84 AB83      		std Y+3,r26
 2320 0c86 BD85      		ldd r27,Y+13
 2321 0c88 BC83      		std Y+4,r27
 2322 0c8a E980      		ldd r14,Y+1
 2323 0c8c FA80      		ldd r15,Y+2
 2324 0c8e 0B81      		ldd r16,Y+3
 2325 0c90 1C81      		ldd r17,Y+4
 2326 0c92 20E0      		ldi r18,0
 2327 0c94 30E0      		ldi r19,0
 2328 0c96 40E8      		ldi r20,lo8(-128)
 2329 0c98 5FE3      		ldi r21,lo8(63)
 2330 0c9a 60E0      		ldi r22,0
 2331 0c9c 70E0      		ldi r23,0
 2332 0c9e CB01      		movw r24,r22
 2333               	.LVL174:
  64:main.c        **** 			tB = color_component(temp1, temp2, h - 1.0 / 3.0);
 2334               		.loc 2 64 9 discriminator 3 view .LVU271
 2335 0ca0 0E94 0000 		call color_component
 2336               	.LVL175:
  64:main.c        **** 			tB = color_component(temp1, temp2, h - 1.0 / 3.0);
 2337               		.loc 2 64 9 discriminator 3 view .LVU272
 2338 0ca4 6FA3      		std Y+39,r22
 2339 0ca6 7F87      		std Y+15,r23
 2340 0ca8 6C01      		movw r12,r24
 2341               	.LVL176:
  65:main.c        **** 		}
 2342               		.loc 2 65 4 is_stmt 1 discriminator 3 view .LVU273
  65:main.c        **** 		}
 2343               		.loc 2 65 9 is_stmt 0 discriminator 3 view .LVU274
 2344 0caa 2BEA      		ldi r18,lo8(-85)
 2345 0cac 3AEA      		ldi r19,lo8(-86)
 2346 0cae 4AEA      		ldi r20,lo8(-86)
 2347 0cb0 5EE3      		ldi r21,lo8(62)
 2348 0cb2 C801      		movw r24,r16
 2349 0cb4 B701      		movw r22,r14
 2350               	.LVL177:
  65:main.c        **** 		}
 2351               		.loc 2 65 9 discriminator 3 view .LVU275
 2352 0cb6 0E94 0000 		call __subsf3
 2353               	.LVL178:
  65:main.c        **** 		}
 2354               		.loc 2 65 9 discriminator 3 view .LVU276
 2355 0cba 6983      		std Y+1,r22
 2356 0cbc 7A83      		std Y+2,r23
 2357 0cbe 8B83      		std Y+3,r24
 2358 0cc0 9C83      		std Y+4,r25
 2359 0cc2 E980      		ldd r14,Y+1
 2360 0cc4 FA80      		ldd r15,Y+2
 2361 0cc6 0B81      		ldd r16,Y+3
 2362 0cc8 1C81      		ldd r17,Y+4
 2363 0cca 20E0      		ldi r18,0
 2364 0ccc 30E0      		ldi r19,0
 2365 0cce 40E8      		ldi r20,lo8(-128)
 2366 0cd0 5FE3      		ldi r21,lo8(63)
 2367 0cd2 60E0      		ldi r22,0
 2368 0cd4 70E0      		ldi r23,0
 2369 0cd6 CB01      		movw r24,r22
 2370 0cd8 0E94 0000 		call color_component
 2371               	.LVL179:
 2372 0cdc 8B01      		movw r16,r22
 2373 0cde 8E87      		std Y+14,r24
 2374 0ce0 9D87      		std Y+13,r25
 2375               	.LVL180:
  69:main.c        **** 	c->G = tG * 255;
 2376               		.loc 2 69 2 is_stmt 1 discriminator 3 view .LVU277
  69:main.c        **** 	c->G = tG * 255;
 2377               		.loc 2 69 12 is_stmt 0 discriminator 3 view .LVU278
 2378 0ce2 20E0      		ldi r18,0
 2379 0ce4 30E0      		ldi r19,0
 2380 0ce6 4FE7      		ldi r20,lo8(127)
 2381 0ce8 53E4      		ldi r21,lo8(67)
 2382 0cea A985      		ldd r26,Y+9
 2383 0cec A983      		std Y+1,r26
 2384 0cee BA85      		ldd r27,Y+10
 2385 0cf0 BA83      		std Y+2,r27
 2386 0cf2 8B85      		ldd r24,Y+11
 2387               	.LVL181:
  69:main.c        **** 	c->G = tG * 255;
 2388               		.loc 2 69 12 discriminator 3 view .LVU279
 2389 0cf4 8B83      		std Y+3,r24
 2390 0cf6 9C85      		ldd r25,Y+12
 2391               	.LVL182:
  69:main.c        **** 	c->G = tG * 255;
 2392               		.loc 2 69 12 discriminator 3 view .LVU280
 2393 0cf8 9C83      		std Y+4,r25
 2394 0cfa 6981      		ldd r22,Y+1
 2395 0cfc 7A81      		ldd r23,Y+2
 2396 0cfe 8B81      		ldd r24,Y+3
 2397 0d00 9C81      		ldd r25,Y+4
 2398 0d02 0E94 0000 		call __mulsf3
 2399               	.LVL183:
  69:main.c        **** 	c->G = tG * 255;
 2400               		.loc 2 69 7 discriminator 3 view .LVU281
 2401 0d06 6983      		std Y+1,r22
 2402 0d08 7A83      		std Y+2,r23
 2403 0d0a 8B83      		std Y+3,r24
 2404 0d0c 9C83      		std Y+4,r25
 2405 0d0e 6981      		ldd r22,Y+1
 2406 0d10 7A81      		ldd r23,Y+2
 2407 0d12 8B81      		ldd r24,Y+3
 2408 0d14 9C81      		ldd r25,Y+4
 2409 0d16 0E94 0000 		call __fixunssfsi
 2410               	.LVL184:
 2411 0d1a F62E      		mov r15,r22
  70:main.c        **** 	c->B = tB * 255;
 2412               		.loc 2 70 2 is_stmt 1 discriminator 3 view .LVU282
  70:main.c        **** 	c->B = tB * 255;
 2413               		.loc 2 70 12 is_stmt 0 discriminator 3 view .LVU283
 2414 0d1c 20E0      		ldi r18,0
 2415 0d1e 30E0      		ldi r19,0
 2416 0d20 4FE7      		ldi r20,lo8(127)
 2417 0d22 53E4      		ldi r21,lo8(67)
 2418 0d24 AFA1      		ldd r26,Y+39
 2419 0d26 A983      		std Y+1,r26
 2420 0d28 BF85      		ldd r27,Y+15
 2421 0d2a BA83      		std Y+2,r27
 2422 0d2c CB82      		std Y+3,r12
 2423 0d2e DC82      		std Y+4,r13
 2424 0d30 6981      		ldd r22,Y+1
 2425 0d32 7A81      		ldd r23,Y+2
 2426 0d34 8B81      		ldd r24,Y+3
 2427 0d36 9C81      		ldd r25,Y+4
 2428 0d38 0E94 0000 		call __mulsf3
 2429               	.LVL185:
  70:main.c        **** 	c->B = tB * 255;
 2430               		.loc 2 70 7 discriminator 3 view .LVU284
 2431 0d3c 6983      		std Y+1,r22
 2432 0d3e 7A83      		std Y+2,r23
 2433 0d40 8B83      		std Y+3,r24
 2434 0d42 9C83      		std Y+4,r25
 2435 0d44 6981      		ldd r22,Y+1
 2436 0d46 7A81      		ldd r23,Y+2
 2437 0d48 8B81      		ldd r24,Y+3
 2438 0d4a 9C81      		ldd r25,Y+4
 2439 0d4c 0E94 0000 		call __fixunssfsi
 2440               	.LVL186:
 2441 0d50 E62E      		mov r14,r22
  71:main.c        **** }
 2442               		.loc 2 71 2 is_stmt 1 discriminator 3 view .LVU285
  71:main.c        **** }
 2443               		.loc 2 71 12 is_stmt 0 discriminator 3 view .LVU286
 2444 0d52 20E0      		ldi r18,0
 2445 0d54 30E0      		ldi r19,0
 2446 0d56 4FE7      		ldi r20,lo8(127)
 2447 0d58 53E4      		ldi r21,lo8(67)
 2448 0d5a 0983      		std Y+1,r16
 2449 0d5c 1A83      		std Y+2,r17
 2450 0d5e 8E85      		ldd r24,Y+14
 2451 0d60 8B83      		std Y+3,r24
 2452 0d62 9D85      		ldd r25,Y+13
 2453 0d64 9C83      		std Y+4,r25
 2454 0d66 6981      		ldd r22,Y+1
 2455 0d68 7A81      		ldd r23,Y+2
 2456 0d6a 8B81      		ldd r24,Y+3
 2457 0d6c 9C81      		ldd r25,Y+4
 2458 0d6e 0E94 0000 		call __mulsf3
 2459               	.LVL187:
  71:main.c        **** }
 2460               		.loc 2 71 7 discriminator 3 view .LVU287
 2461 0d72 6983      		std Y+1,r22
 2462 0d74 7A83      		std Y+2,r23
 2463 0d76 8B83      		std Y+3,r24
 2464 0d78 9C83      		std Y+4,r25
 2465 0d7a 6981      		ldd r22,Y+1
 2466 0d7c 7A81      		ldd r23,Y+2
 2467 0d7e 8B81      		ldd r24,Y+3
 2468 0d80 9C81      		ldd r25,Y+4
 2469 0d82 0E94 0000 		call __fixunssfsi
 2470               	.LVL188:
  71:main.c        **** }
 2471               		.loc 2 71 7 discriminator 3 view .LVU288
 2472               	.LBE76:
 2473               	.LBE75:
 130:main.c        **** 			pixel(x, y, &c);
 2474               		.loc 2 130 4 is_stmt 1 discriminator 3 view .LVU289
 2475               	.LBB77:
 2476               	.LBI77:
 103:main.c        **** {
 2477               		.loc 2 103 13 discriminator 3 view .LVU290
 2478               	.LBE77:
 105:main.c        **** 	{
 2479               		.loc 2 105 2 discriminator 3 view .LVU291
 2480               	.LBB79:
 2481               	.LBB78:
 107:main.c        **** 		x = (WIDTH - 1) - x;
 2482               		.loc 2 107 3 discriminator 3 view .LVU292
 108:main.c        **** 		y = (HEIGHT - 1) - y;
 2483               		.loc 2 108 3 discriminator 3 view .LVU293
 109:main.c        **** 		i = 3 * ((y % 2)
 2484               		.loc 2 109 3 discriminator 3 view .LVU294
 110:main.c        **** 			? ((WIDTH * y) + ((WIDTH - 1) - x)) : (WIDTH * y + x));
 2485               		.loc 2 110 3 discriminator 3 view .LVU295
 110:main.c        **** 			? ((WIDTH * y) + ((WIDTH - 1) - x)) : (WIDTH * y + x));
 2486               		.loc 2 110 9 is_stmt 0 discriminator 3 view .LVU296
 2487 0d86 AD81      		ldd r26,Y+5
 2488 0d88 EBA9      		ldd r30,Y+51
 2489 0d8a FCA9      		ldd r31,Y+52
 2490 0d8c A0FF      		sbrs r26,0
 2491 0d8e 00C0      		rjmp .L49
 110:main.c        **** 			? ((WIDTH * y) + ((WIDTH - 1) - x)) : (WIDTH * y + x));
 2492               		.loc 2 110 9 view .LVU297
 2493 0d90 E9A9      		ldd r30,Y+49
 2494 0d92 FAA9      		ldd r31,Y+50
 2495               	.L49:
 2496               	.LVL189:
 113:main.c        **** 		_pixels[++i] = color->R;
 2497               		.loc 2 113 3 is_stmt 1 view .LVU298
 113:main.c        **** 		_pixels[++i] = color->R;
 2498               		.loc 2 113 14 is_stmt 0 view .LVU299
 2499 0d94 E050      		subi r30,lo8(-(_pixels))
 2500 0d96 F040      		sbci r31,hi8(-(_pixels))
 2501 0d98 E082      		st Z,r14
 114:main.c        **** 		_pixels[++i] = color->B;
 2502               		.loc 2 114 3 is_stmt 1 view .LVU300
 114:main.c        **** 		_pixels[++i] = color->B;
 2503               		.loc 2 114 16 is_stmt 0 view .LVU301
 2504 0d9a F182      		std Z+1,r15
 115:main.c        **** 	}
 2505               		.loc 2 115 3 is_stmt 1 view .LVU302
 115:main.c        **** 	}
 2506               		.loc 2 115 16 is_stmt 0 view .LVU303
 2507 0d9c 6283      		std Z+2,r22
 2508               	.LVL190:
 115:main.c        **** 	}
 2509               		.loc 2 115 16 view .LVU304
 2510               	.LBE78:
 2511               	.LBE79:
 126:main.c        **** 		{
 2512               		.loc 2 126 26 is_stmt 1 view .LVU305
 126:main.c        **** 		{
 2513               		.loc 2 126 27 is_stmt 0 view .LVU306
 2514 0d9e BD81      		ldd r27,Y+5
 2515 0da0 BF5F      		subi r27,lo8(-(1))
 2516 0da2 BD83      		std Y+5,r27
 2517               	.LVL191:
 126:main.c        **** 		{
 2518               		.loc 2 126 14 is_stmt 1 view .LVU307
 126:main.c        **** 		{
 2519               		.loc 2 126 3 is_stmt 0 view .LVU308
 2520 0da4 2BA9      		ldd r18,Y+51
 2521 0da6 3CA9      		ldd r19,Y+52
 2522 0da8 2E51      		subi r18,30
 2523 0daa 3109      		sbc r19,__zero_reg__
 2524 0dac 3CAB      		std Y+52,r19
 2525 0dae 2BAB      		std Y+51,r18
 2526 0db0 89A9      		ldd r24,Y+49
 2527 0db2 9AA9      		ldd r25,Y+50
 2528 0db4 4E97      		sbiw r24,30
 2529 0db6 9AAB      		std Y+50,r25
 2530 0db8 89AB      		std Y+49,r24
 2531 0dba BA30      		cpi r27,lo8(10)
 2532 0dbc 01F0      		breq .+2
 2533 0dbe 00C0      		rjmp .L50
 124:main.c        **** 	{
 2534               		.loc 2 124 24 is_stmt 1 discriminator 2 view .LVU309
 2535               	.LVL192:
 124:main.c        **** 	{
 2536               		.loc 2 124 13 discriminator 2 view .LVU310
 124:main.c        **** 	{
 2537               		.loc 2 124 2 is_stmt 0 discriminator 2 view .LVU311
 2538 0dc0 A98D      		ldd r26,Y+25
 2539 0dc2 BA8D      		ldd r27,Y+26
 2540 0dc4 1196      		adiw r26,1
 2541 0dc6 BA8F      		std Y+26,r27
 2542 0dc8 A98F      		std Y+25,r26
 2543               	.LVL193:
 124:main.c        **** 	{
 2544               		.loc 2 124 2 discriminator 2 view .LVU312
 2545 0dca 2F89      		ldd r18,Y+23
 2546 0dcc 388D      		ldd r19,Y+24
 2547 0dce 2D5F      		subi r18,-3
 2548 0dd0 3F4F      		sbci r19,-1
 2549 0dd2 388F      		std Y+24,r19
 2550 0dd4 2F8B      		std Y+23,r18
 2551 0dd6 1A97      		sbiw r26,10
 2552 0dd8 01F0      		breq .+2
 2553 0dda 00C0      		rjmp .L47
 131:main.c        **** 		}
 132:main.c        **** 	}
 133:main.c        **** 
 134:main.c        **** 	time += 0.01;
 2554               		.loc 2 134 2 is_stmt 1 view .LVU313
 2555               		.loc 2 134 7 is_stmt 0 view .LVU314
 2556 0ddc 2AE0      		ldi r18,lo8(10)
 2557 0dde 37ED      		ldi r19,lo8(-41)
 2558 0de0 43E2      		ldi r20,lo8(35)
 2559 0de2 5CE3      		ldi r21,lo8(60)
 2560 0de4 69A5      		ldd r22,Y+41
 2561 0de6 7AA5      		ldd r23,Y+42
 2562 0de8 8BA5      		ldd r24,Y+43
 2563 0dea 9CA5      		ldd r25,Y+44
 2564 0dec 0E94 0000 		call __addsf3
 2565               	.LVL194:
 2566               		.loc 2 134 7 view .LVU315
 2567 0df0 6093 0000 		sts time,r22
 2568 0df4 7093 0000 		sts time+1,r23
 2569 0df8 8093 0000 		sts time+2,r24
 2570 0dfc 9093 0000 		sts time+3,r25
 135:main.c        **** 	ws2812(_pixels, BYTES);
 2571               		.loc 2 135 2 is_stmt 1 view .LVU316
 2572               	.LBB80:
 2573               	.LBI80:
 2574               		.file 3 "ws2812.c"
   1:ws2812.c      **** #include <stdint.h>
   2:ws2812.c      **** #include <avr/io.h>
   3:ws2812.c      **** 
   4:ws2812.c      **** #define WS2812_OUT        PORTD
   5:ws2812.c      **** #define WS2812_DIR        DDRD
   6:ws2812.c      **** #define WS2812_PIN        PD2
   7:ws2812.c      **** 
   8:ws2812.c      **** #define w_zeropulse    350
   9:ws2812.c      **** #define w_onepulse     900
  10:ws2812.c      **** #define w_totalperiod 1250
  11:ws2812.c      **** #define w_fixedlow       2
  12:ws2812.c      **** #define w_fixedhigh      4
  13:ws2812.c      **** #define w_fixedtotal     8
  14:ws2812.c      **** 
  15:ws2812.c      **** #define w_zerocycles      (((F_CPU / 1000) * w_zeropulse) / 1000000)
  16:ws2812.c      **** #define w_onecycles       (((F_CPU / 1000) * w_onepulse + 500000) / 1000000)
  17:ws2812.c      **** #define w_totalcycles     (((F_CPU / 1000) * w_totalperiod + 500000) / 1000000)
  18:ws2812.c      **** 
  19:ws2812.c      **** #define w1                (w_zerocycles - w_fixedlow)
  20:ws2812.c      **** #define w2                (w_onecycles - w_fixedhigh - w1)
  21:ws2812.c      **** #define w3                (w_totalcycles - w_fixedtotal - w1 - w2)
  22:ws2812.c      **** 
  23:ws2812.c      **** #if (w1 > 0)
  24:ws2812.c      **** #define w1_nops w1
  25:ws2812.c      **** #else
  26:ws2812.c      **** #define w1_nops  0
  27:ws2812.c      **** #endif
  28:ws2812.c      **** 
  29:ws2812.c      **** #define w_lowtime (((w1_nops + w_fixedlow) * 1000000) / (F_CPU / 1000))
  30:ws2812.c      **** 
  31:ws2812.c      **** #if (w_lowtime > 550)
  32:ws2812.c      **** #error "F_CPU to low"
  33:ws2812.c      **** #elif (w_lowtime > 450)
  34:ws2812.c      **** #warning "Critical timing"
  35:ws2812.c      **** #endif   
  36:ws2812.c      **** 
  37:ws2812.c      **** #if (w2 > 0)
  38:ws2812.c      **** #define w2_nops w2
  39:ws2812.c      **** #else
  40:ws2812.c      **** #define w2_nops  0
  41:ws2812.c      **** #endif
  42:ws2812.c      **** 
  43:ws2812.c      **** #if (w3 > 0)
  44:ws2812.c      **** #define w3_nops w3
  45:ws2812.c      **** #else
  46:ws2812.c      **** #define w3_nops  0
  47:ws2812.c      **** #endif
  48:ws2812.c      **** 
  49:ws2812.c      **** #define w_nop1  "nop      \n\t"
  50:ws2812.c      **** #define w_nop2  "rjmp .+0 \n\t"
  51:ws2812.c      **** #define w_nop4  w_nop2 w_nop2
  52:ws2812.c      **** #define w_nop8  w_nop4 w_nop4
  53:ws2812.c      **** #define w_nop16 w_nop8 w_nop8
  54:ws2812.c      **** 
  55:ws2812.c      **** static void ws2812(uint8_t *pixels, uint16_t count)
 2575               		.loc 3 55 13 view .LVU317
 2576               	.LVL195:
 2577               	.LBB81:
  56:ws2812.c      **** {
  57:ws2812.c      **** 	uint8_t b, c, h, l, s;
 2578               		.loc 3 57 2 view .LVU318
  58:ws2812.c      **** 	h = (1 << WS2812_PIN);
 2579               		.loc 3 58 2 view .LVU319
  59:ws2812.c      **** 	WS2812_DIR |= h;
 2580               		.loc 3 59 2 view .LVU320
 2581               		.loc 3 59 13 is_stmt 0 view .LVU321
 2582 0e00 529A      		sbi 0xa,2
  60:ws2812.c      **** 	l = ~h & WS2812_OUT;
 2583               		.loc 3 60 2 is_stmt 1 view .LVU322
 2584               		.loc 3 60 11 is_stmt 0 view .LVU323
 2585 0e02 3BB1      		in r19,0xb
 2586               		.loc 3 60 9 view .LVU324
 2587 0e04 3B7F      		andi r19,lo8(-5)
 2588               	.LVL196:
  61:ws2812.c      **** 	h |= WS2812_OUT;
 2589               		.loc 3 61 2 is_stmt 1 view .LVU325
 2590               		.loc 3 61 7 is_stmt 0 view .LVU326
 2591 0e06 2BB1      		in r18,0xb
 2592               		.loc 3 61 4 view .LVU327
 2593 0e08 2460      		ori r18,lo8(4)
 2594               	.LVL197:
  62:ws2812.c      **** 	s = SREG;
 2595               		.loc 3 62 2 is_stmt 1 view .LVU328
 2596               		.loc 3 62 4 is_stmt 0 view .LVU329
 2597 0e0a 4FB7      		in r20,__SREG__
 2598               	.LVL198:
  63:ws2812.c      **** 	asm volatile ("cli");
 2599               		.loc 3 63 2 is_stmt 1 view .LVU330
 2600               	/* #APP */
 2601               	 ;  63 "ws2812.c" 1
 2602 0e0c F894      		cli
 2603               	 ;  0 "" 2
  64:ws2812.c      **** 	while(count--)
 2604               		.loc 3 64 2 view .LVU331
 2605               		.loc 3 64 7 view .LVU332
 2606               	.LVL199:
  63:ws2812.c      **** 	asm volatile ("cli");
 2607               		.loc 3 63 2 is_stmt 0 view .LVU333
 2608               	/* #NOAPP */
 2609 0e0e 80E0      		ldi r24,lo8(_pixels)
 2610 0e10 90E0      		ldi r25,hi8(_pixels)
 2611               	.LVL200:
 2612               	.L52:
  65:ws2812.c      **** 	{
  66:ws2812.c      **** 		b = *pixels++;
 2613               		.loc 3 66 3 is_stmt 1 view .LVU334
 2614 0e12 FC01      		movw r30,r24
 2615               		.loc 3 66 14 is_stmt 0 view .LVU335
 2616 0e14 0196      		adiw r24,1
 2617               	.LVL201:
  67:ws2812.c      **** 		asm volatile
 2618               		.loc 3 67 3 is_stmt 1 view .LVU336
 2619 0e16 5081      		ld r21,Z
 2620               	/* #APP */
 2621               	 ;  67 "ws2812.c" 1
 2622 0e18 68E0      		       ldi   r22,8  
 2623               		loop1936:            
 2624 0e1a 2BB9      		       out   11,r18 
 2625 0e1c 0000      		nop      
 2626 0e1e 00C0      		rjmp .+0 
 2627 0e20 57FF      		       sbrs  r21,7  
 2628 0e22 3BB9      		       out   11,r19 
 2629 0e24 550F      		       lsl   r21    
 2630 0e26 0000      		nop      
 2631 0e28 00C0      		rjmp .+0 
 2632 0e2a 00C0      		rjmp .+0 
 2633 0e2c 00C0      		rjmp .+0 
 2634 0e2e 3BB9      		       out   11,r19 
 2635 0e30 00C0      		rjmp .+0 
 2636 0e32 6A95      		       dec   r22    
 2637 0e34 01F4      		       brne  loop1936
 2638               		
 2639               	 ;  0 "" 2
 2640               	.LVL202:
  64:ws2812.c      **** 	while(count--)
 2641               		.loc 3 64 7 view .LVU337
  64:ws2812.c      **** 	while(count--)
 2642               		.loc 3 64 7 is_stmt 0 view .LVU338
 2643               	/* #NOAPP */
 2644 0e36 50E0      		ldi r21,hi8(_pixels+300)
 2645 0e38 8030      		cpi r24,lo8(_pixels+300)
 2646 0e3a 9507      		cpc r25,r21
 2647 0e3c 01F4      		brne .L52
  68:ws2812.c      **** 		(
  69:ws2812.c      **** 			"       ldi   %0,8  \n\t"
  70:ws2812.c      **** 			"loop%=:            \n\t"
  71:ws2812.c      **** 			"       out   %2,%3 \n\t"
  72:ws2812.c      **** #if (w1_nops & 1)
  73:ws2812.c      **** w_nop1
  74:ws2812.c      **** #endif
  75:ws2812.c      **** #if (w1_nops & 2)
  76:ws2812.c      **** w_nop2
  77:ws2812.c      **** #endif
  78:ws2812.c      **** #if (w1_nops & 4)
  79:ws2812.c      **** w_nop4
  80:ws2812.c      **** #endif
  81:ws2812.c      **** #if (w1_nops & 8)
  82:ws2812.c      **** w_nop8
  83:ws2812.c      **** #endif
  84:ws2812.c      **** #if (w1_nops & 16)
  85:ws2812.c      **** w_nop16
  86:ws2812.c      **** #endif
  87:ws2812.c      **** 			"       sbrs  %1,7  \n\t"
  88:ws2812.c      **** 			"       out   %2,%4 \n\t"
  89:ws2812.c      **** 			"       lsl   %1    \n\t"
  90:ws2812.c      **** #if (w2_nops & 1)
  91:ws2812.c      **** w_nop1
  92:ws2812.c      **** #endif
  93:ws2812.c      **** #if (w2_nops & 2)
  94:ws2812.c      **** w_nop2
  95:ws2812.c      **** #endif
  96:ws2812.c      **** #if (w2_nops & 4)
  97:ws2812.c      **** w_nop4
  98:ws2812.c      **** #endif
  99:ws2812.c      **** #if (w2_nops & 8)
 100:ws2812.c      **** w_nop8
 101:ws2812.c      **** #endif
 102:ws2812.c      **** #if (w2_nops & 16)
 103:ws2812.c      **** w_nop16 
 104:ws2812.c      **** #endif
 105:ws2812.c      **** 			"       out   %2,%4 \n\t"
 106:ws2812.c      **** #if (w3_nops & 1)
 107:ws2812.c      **** w_nop1
 108:ws2812.c      **** #endif
 109:ws2812.c      **** #if (w3_nops & 2)
 110:ws2812.c      **** w_nop2
 111:ws2812.c      **** #endif
 112:ws2812.c      **** #if (w3_nops & 4)
 113:ws2812.c      **** w_nop4
 114:ws2812.c      **** #endif
 115:ws2812.c      **** #if (w3_nops & 8)
 116:ws2812.c      **** w_nop8
 117:ws2812.c      **** #endif
 118:ws2812.c      **** #if (w3_nops & 16)
 119:ws2812.c      **** w_nop16
 120:ws2812.c      **** #endif
 121:ws2812.c      **** 			"       dec   %0    \n\t"
 122:ws2812.c      **** 			"       brne  loop%=\n\t"
 123:ws2812.c      **** 			:	"=&d" (c)
 124:ws2812.c      **** 			:	"r" (b),
 125:ws2812.c      **** 				"I" (_SFR_IO_ADDR(WS2812_OUT)),
 126:ws2812.c      **** 				"r" (h),
 127:ws2812.c      **** 				"r" (l)
 128:ws2812.c      **** 		);
 129:ws2812.c      **** 	}
 130:ws2812.c      ****   
 131:ws2812.c      **** 	SREG = s;
 2648               		.loc 3 131 2 is_stmt 1 view .LVU339
 2649               		.loc 3 131 7 is_stmt 0 view .LVU340
 2650 0e3e 4FBF      		out __SREG__,r20
 2651               	.LVL203:
 2652               	/* epilogue start */
 2653               		.loc 3 131 7 view .LVU341
 2654               	.LBE81:
 2655               	.LBE80:
 136:main.c        **** }
 2656               		.loc 2 136 1 view .LVU342
 2657 0e40 CC5B      		subi r28,-68
 2658 0e42 DF4F      		sbci r29,-1
 2659 0e44 0FB6      		in __tmp_reg__,__SREG__
 2660 0e46 F894      		cli
 2661 0e48 DEBF      		out __SP_H__,r29
 2662 0e4a 0FBE      		out __SREG__,__tmp_reg__
 2663 0e4c CDBF      		out __SP_L__,r28
 2664 0e4e DF91      		pop r29
 2665 0e50 CF91      		pop r28
 2666 0e52 FF91      		pop r31
 2667 0e54 EF91      		pop r30
 2668 0e56 BF91      		pop r27
 2669 0e58 AF91      		pop r26
 2670 0e5a 9F91      		pop r25
 2671 0e5c 8F91      		pop r24
 2672 0e5e 7F91      		pop r23
 2673 0e60 6F91      		pop r22
 2674 0e62 5F91      		pop r21
 2675 0e64 4F91      		pop r20
 2676 0e66 3F91      		pop r19
 2677 0e68 2F91      		pop r18
 2678 0e6a 1F91      		pop r17
 2679 0e6c 0F91      		pop r16
 2680 0e6e FF90      		pop r15
 2681 0e70 EF90      		pop r14
 2682 0e72 DF90      		pop r13
 2683 0e74 CF90      		pop r12
 2684 0e76 BF90      		pop r11
 2685 0e78 AF90      		pop r10
 2686 0e7a 9F90      		pop r9
 2687 0e7c 8F90      		pop r8
 2688 0e7e 7F90      		pop r7
 2689 0e80 6F90      		pop r6
 2690 0e82 5F90      		pop r5
 2691 0e84 4F90      		pop r4
 2692 0e86 3F90      		pop r3
 2693 0e88 2F90      		pop r2
 2694 0e8a 0F90      		pop r0
 2695 0e8c 0FBE      		out __SREG__,r0
 2696 0e8e 0F90      		pop r0
 2697 0e90 1F90      		pop r1
 2698 0e92 1895      		reti
 2699               		.cfi_endproc
 2700               	.LFE15:
 2702               		.local	_pixels
 2703               		.comm	_pixels,300,1
 2704               		.local	time
 2705               		.comm	time,4,1
 2706               	.global	black
 2707               		.section .bss
 2710               	black:
 2711 0000 0000 00   		.zero	3
 2712               		.section	.rodata
 2715               	p:
 2716 0000 9700      		.word	151
 2717 0002 A000      		.word	160
 2718 0004 8900      		.word	137
 2719 0006 5B00      		.word	91
 2720 0008 5A00      		.word	90
 2721 000a 0F00      		.word	15
 2722 000c 8300      		.word	131
 2723 000e 0D00      		.word	13
 2724 0010 C900      		.word	201
 2725 0012 5F00      		.word	95
 2726 0014 6000      		.word	96
 2727 0016 3500      		.word	53
 2728 0018 C200      		.word	194
 2729 001a E900      		.word	233
 2730 001c 0700      		.word	7
 2731 001e E100      		.word	225
 2732 0020 8C00      		.word	140
 2733 0022 2400      		.word	36
 2734 0024 6700      		.word	103
 2735 0026 1E00      		.word	30
 2736 0028 4500      		.word	69
 2737 002a 8E00      		.word	142
 2738 002c 0800      		.word	8
 2739 002e 6300      		.word	99
 2740 0030 2500      		.word	37
 2741 0032 F000      		.word	240
 2742 0034 1500      		.word	21
 2743 0036 0A00      		.word	10
 2744 0038 1700      		.word	23
 2745 003a BE00      		.word	190
 2746 003c 0600      		.word	6
 2747 003e 9400      		.word	148
 2748 0040 F700      		.word	247
 2749 0042 7800      		.word	120
 2750 0044 EA00      		.word	234
 2751 0046 4B00      		.word	75
 2752 0048 0000      		.word	0
 2753 004a 1A00      		.word	26
 2754 004c C500      		.word	197
 2755 004e 3E00      		.word	62
 2756 0050 5E00      		.word	94
 2757 0052 FC00      		.word	252
 2758 0054 DB00      		.word	219
 2759 0056 CB00      		.word	203
 2760 0058 7500      		.word	117
 2761 005a 2300      		.word	35
 2762 005c 0B00      		.word	11
 2763 005e 2000      		.word	32
 2764 0060 3900      		.word	57
 2765 0062 B100      		.word	177
 2766 0064 2100      		.word	33
 2767 0066 5800      		.word	88
 2768 0068 ED00      		.word	237
 2769 006a 9500      		.word	149
 2770 006c 3800      		.word	56
 2771 006e 5700      		.word	87
 2772 0070 AE00      		.word	174
 2773 0072 1400      		.word	20
 2774 0074 7D00      		.word	125
 2775 0076 8800      		.word	136
 2776 0078 AB00      		.word	171
 2777 007a A800      		.word	168
 2778 007c 4400      		.word	68
 2779 007e AF00      		.word	175
 2780 0080 4A00      		.word	74
 2781 0082 A500      		.word	165
 2782 0084 4700      		.word	71
 2783 0086 8600      		.word	134
 2784 0088 8B00      		.word	139
 2785 008a 3000      		.word	48
 2786 008c 1B00      		.word	27
 2787 008e A600      		.word	166
 2788 0090 4D00      		.word	77
 2789 0092 9200      		.word	146
 2790 0094 9E00      		.word	158
 2791 0096 E700      		.word	231
 2792 0098 5300      		.word	83
 2793 009a 6F00      		.word	111
 2794 009c E500      		.word	229
 2795 009e 7A00      		.word	122
 2796 00a0 3C00      		.word	60
 2797 00a2 D300      		.word	211
 2798 00a4 8500      		.word	133
 2799 00a6 E600      		.word	230
 2800 00a8 DC00      		.word	220
 2801 00aa 6900      		.word	105
 2802 00ac 5C00      		.word	92
 2803 00ae 2900      		.word	41
 2804 00b0 3700      		.word	55
 2805 00b2 2E00      		.word	46
 2806 00b4 F500      		.word	245
 2807 00b6 2800      		.word	40
 2808 00b8 F400      		.word	244
 2809 00ba 6600      		.word	102
 2810 00bc 8F00      		.word	143
 2811 00be 3600      		.word	54
 2812 00c0 4100      		.word	65
 2813 00c2 1900      		.word	25
 2814 00c4 3F00      		.word	63
 2815 00c6 A100      		.word	161
 2816 00c8 0100      		.word	1
 2817 00ca D800      		.word	216
 2818 00cc 5000      		.word	80
 2819 00ce 4900      		.word	73
 2820 00d0 D100      		.word	209
 2821 00d2 4C00      		.word	76
 2822 00d4 8400      		.word	132
 2823 00d6 BB00      		.word	187
 2824 00d8 D000      		.word	208
 2825 00da 5900      		.word	89
 2826 00dc 1200      		.word	18
 2827 00de A900      		.word	169
 2828 00e0 C800      		.word	200
 2829 00e2 C400      		.word	196
 2830 00e4 8700      		.word	135
 2831 00e6 8200      		.word	130
 2832 00e8 7400      		.word	116
 2833 00ea BC00      		.word	188
 2834 00ec 9F00      		.word	159
 2835 00ee 5600      		.word	86
 2836 00f0 A400      		.word	164
 2837 00f2 6400      		.word	100
 2838 00f4 6D00      		.word	109
 2839 00f6 C600      		.word	198
 2840 00f8 AD00      		.word	173
 2841 00fa BA00      		.word	186
 2842 00fc 0300      		.word	3
 2843 00fe 4000      		.word	64
 2844 0100 3400      		.word	52
 2845 0102 D900      		.word	217
 2846 0104 E200      		.word	226
 2847 0106 FA00      		.word	250
 2848 0108 7C00      		.word	124
 2849 010a 7B00      		.word	123
 2850 010c 0500      		.word	5
 2851 010e CA00      		.word	202
 2852 0110 2600      		.word	38
 2853 0112 9300      		.word	147
 2854 0114 7600      		.word	118
 2855 0116 7E00      		.word	126
 2856 0118 FF00      		.word	255
 2857 011a 5200      		.word	82
 2858 011c 5500      		.word	85
 2859 011e D400      		.word	212
 2860 0120 CF00      		.word	207
 2861 0122 CE00      		.word	206
 2862 0124 3B00      		.word	59
 2863 0126 E300      		.word	227
 2864 0128 2F00      		.word	47
 2865 012a 1000      		.word	16
 2866 012c 3A00      		.word	58
 2867 012e 1100      		.word	17
 2868 0130 B600      		.word	182
 2869 0132 BD00      		.word	189
 2870 0134 1C00      		.word	28
 2871 0136 2A00      		.word	42
 2872 0138 DF00      		.word	223
 2873 013a B700      		.word	183
 2874 013c AA00      		.word	170
 2875 013e D500      		.word	213
 2876 0140 7700      		.word	119
 2877 0142 F800      		.word	248
 2878 0144 9800      		.word	152
 2879 0146 0200      		.word	2
 2880 0148 2C00      		.word	44
 2881 014a 9A00      		.word	154
 2882 014c A300      		.word	163
 2883 014e 4600      		.word	70
 2884 0150 DD00      		.word	221
 2885 0152 9900      		.word	153
 2886 0154 6500      		.word	101
 2887 0156 9B00      		.word	155
 2888 0158 A700      		.word	167
 2889 015a 2B00      		.word	43
 2890 015c AC00      		.word	172
 2891 015e 0900      		.word	9
 2892 0160 8100      		.word	129
 2893 0162 1600      		.word	22
 2894 0164 2700      		.word	39
 2895 0166 FD00      		.word	253
 2896 0168 1300      		.word	19
 2897 016a 6200      		.word	98
 2898 016c 6C00      		.word	108
 2899 016e 6E00      		.word	110
 2900 0170 4F00      		.word	79
 2901 0172 7100      		.word	113
 2902 0174 E000      		.word	224
 2903 0176 E800      		.word	232
 2904 0178 B200      		.word	178
 2905 017a B900      		.word	185
 2906 017c 7000      		.word	112
 2907 017e 6800      		.word	104
 2908 0180 DA00      		.word	218
 2909 0182 F600      		.word	246
 2910 0184 6100      		.word	97
 2911 0186 E400      		.word	228
 2912 0188 FB00      		.word	251
 2913 018a 2200      		.word	34
 2914 018c F200      		.word	242
 2915 018e C100      		.word	193
 2916 0190 EE00      		.word	238
 2917 0192 D200      		.word	210
 2918 0194 9000      		.word	144
 2919 0196 0C00      		.word	12
 2920 0198 BF00      		.word	191
 2921 019a B300      		.word	179
 2922 019c A200      		.word	162
 2923 019e F100      		.word	241
 2924 01a0 5100      		.word	81
 2925 01a2 3300      		.word	51
 2926 01a4 9100      		.word	145
 2927 01a6 EB00      		.word	235
 2928 01a8 F900      		.word	249
 2929 01aa 0E00      		.word	14
 2930 01ac EF00      		.word	239
 2931 01ae 6B00      		.word	107
 2932 01b0 3100      		.word	49
 2933 01b2 C000      		.word	192
 2934 01b4 D600      		.word	214
 2935 01b6 1F00      		.word	31
 2936 01b8 B500      		.word	181
 2937 01ba C700      		.word	199
 2938 01bc 6A00      		.word	106
 2939 01be 9D00      		.word	157
 2940 01c0 B800      		.word	184
 2941 01c2 5400      		.word	84
 2942 01c4 CC00      		.word	204
 2943 01c6 B000      		.word	176
 2944 01c8 7300      		.word	115
 2945 01ca 7900      		.word	121
 2946 01cc 3200      		.word	50
 2947 01ce 2D00      		.word	45
 2948 01d0 7F00      		.word	127
 2949 01d2 0400      		.word	4
 2950 01d4 9600      		.word	150
 2951 01d6 FE00      		.word	254
 2952 01d8 8A00      		.word	138
 2953 01da EC00      		.word	236
 2954 01dc CD00      		.word	205
 2955 01de 5D00      		.word	93
 2956 01e0 DE00      		.word	222
 2957 01e2 7200      		.word	114
 2958 01e4 4300      		.word	67
 2959 01e6 1D00      		.word	29
 2960 01e8 1800      		.word	24
 2961 01ea 4800      		.word	72
 2962 01ec F300      		.word	243
 2963 01ee 8D00      		.word	141
 2964 01f0 8000      		.word	128
 2965 01f2 C300      		.word	195
 2966 01f4 4E00      		.word	78
 2967 01f6 4200      		.word	66
 2968 01f8 D700      		.word	215
 2969 01fa 3D00      		.word	61
 2970 01fc 9C00      		.word	156
 2971 01fe B400      		.word	180
 2972               		.text
 2973               	.Letext0:
 2974               		.file 4 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc2MrfQo.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc2MrfQo.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc2MrfQo.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc2MrfQo.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc2MrfQo.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc2MrfQo.s:11     .text:0000000000000000 get
     /tmp/cc2MrfQo.s:2715   .rodata:0000000000000000 p
     /tmp/cc2MrfQo.s:59     .text:0000000000000026 grad
     /tmp/cc2MrfQo.s:255    .text:00000000000000ee color_component
     /tmp/cc2MrfQo.s:639    .text.startup:0000000000000000 main
     /tmp/cc2MrfQo.s:684    .text:00000000000002fc __vector_14
     /tmp/cc2MrfQo.s:2703   .bss:000000000000012f time
                             .bss:0000000000000003 _pixels
     /tmp/cc2MrfQo.s:2623   .text:0000000000000e1a loop1936
     /tmp/cc2MrfQo.s:2710   .bss:0000000000000000 black

UNDEFINED SYMBOLS
__addsf3
__ltsf2
__gtsf2
__subsf3
__mulsf3
__fixsfsi
__floatsisf
__floatunsisf
__divsf3
__fixunssfsi
__do_copy_data
__do_clear_bss
